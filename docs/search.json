[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "EA Market testing data analysis",
    "section": "",
    "text": "The “EA Market Testing Team” represents a small group of researchers and practitioners interested in promoting effective altruism and effective charitable giving and learning more about what motivates this.\nSee ‘Effective Giving & Action: Market testing & Synthesis’ - public and private version, and our FAQ here.\n\nThe present web book aims to present all of the trials and experiments that we are able to share. We aim to present the setup, results, and analysis as concisely and transparently as possible. This dynamic document combines data, code, visualization, tests, and limited narrative. It is a complement to the ‘Gitbook’ linked above, and each refer to each other.\n\n\nThis is styled with Quatro. See my template repo here, hosted here,\nHowever, we’re not sure yet if and how it can be integrated with the https://app.gitbook.com/ content.\nNote: as this is Quarto and not Rmd, packages need to be loaded in every chapter. I’ll put these in code/shared_packages_code.R."
  },
  {
    "objectID": "chapters/oftw_upsell_input_first_analysis.html",
    "href": "chapters/oftw_upsell_input_first_analysis.html",
    "title": "1  OftW pre-giving-tuesday-email upselling split test (considering ‘impact vs emotion’)",
    "section": "",
    "text": "In December 2021, OftW sent out a sequence of emails to existing OftW pledgers/participants asking them for an additional donation. Ther e were two ‘treatment variants’; an emotional email and a standard impact-based email. The treatment was constant by individual (the same person always got emails with the same theme.\nThe details are presented in our (currently private) gitbook HERE and in the linked pre-registration (also on OSF)."
  },
  {
    "objectID": "chapters/oftw_upsell_input_first_analysis.html#capturing-data",
    "href": "chapters/oftw_upsell_input_first_analysis.html#capturing-data",
    "title": "1  OftW pre-giving-tuesday-email upselling split test (considering ‘impact vs emotion’)",
    "section": "1.2 Capturing data",
    "text": "1.2 Capturing data\nKennan and Chloe captured the data and Metadata from\n\nThe OFTW database\nSurveyMonkey\n\nPutting this into the (private) Google sheet linked HERE\nWe added some metadata/explainers to that data.1"
  },
  {
    "objectID": "chapters/oftw_upsell_input_first_analysis.html#input-and-clean-data",
    "href": "chapters/oftw_upsell_input_first_analysis.html#input-and-clean-data",
    "title": "1  OftW pre-giving-tuesday-email upselling split test (considering ‘impact vs emotion’)",
    "section": "1.3 Input and clean data",
    "text": "1.3 Input and clean data\nWe input the sheets from the external Google sheet location (access required)…\n\n\nCode\ngs4_auth(scope = \"https://www.googleapis.com/auth/drive\")\ndrive_auth(token = gs4_token())\n\n#Mailchimp data \n\noftw_21_22_mc <- read_sheet(\"https://docs.google.com/spreadsheets/d/1iUKXkEqoadBgtUG_epBzUzCgA_J5mdWWstcXtpAdNJs/edit#gid=521638649\", \n  sheet=\"Raw data (Mailchimp)\")  %>% \n  select(-`Treatment group`) %>%  #remove an un-useful repeated name column \n    mutate(`Treatment Group` = purrr::map_chr(`Treatment Group`, ~ .[[1]])) %>%\n  select(`Email Address`, `Email Date`, `Treatment Group`, Opens, `Donate link clicks`, everything()) %>% #Most relevant features organized first\n  arrange(`Email Address`)\n\n\n#later: remove features brought in from OFTW database, reconstruct it\n\noftw_21_22_mc %>% names() %>% paste(collapse=\", \")\n\n\n[1] \"Email Address, Email Date, Treatment Group, Opens, Donate link clicks, sheet_descriptor, First Name, Last Name, Email Number, Class Year, Donor status, Total Given, Donation amount, Donation frequency, Start string, Platform, Portfolio string, Class lead, Impact 1, Impact 2, Impact 3, Employer, Pledge string, School string, Pledge year, Cancellation Type, Donation Amount String, OFTW matching, OFTW match amount, Corporate match amount, Bonuses announced, Post-bonus contact date, Email Preferences, Start Date, Lives Saved, Member Rating, Record rank, Total Giving Season contributions, Total Giving Season contribution amount\"\n\n\nCode\n#...input descriptors for the above (do this later from \"doc: ...Mailchimp\" sheet\n\n\n\n\nCode\n#Donations data (and OftW database info)\n\noftw_21_22_db_don <- read_sheet(\n  \"https://docs.google.com/spreadsheets/d/1iUKXkEqoadBgtUG_epBzUzCgA_J5mdWWstcXtpAdNJs/edit#gid=521638649\", \n  sheet=\"Giving Season contributions (BigQuery)\") %>% \n  mutate(`Treatment group` = purrr::map_chr(`Treatment group`, ~ .[[1]])) %>%\n    select(`email`, `primary_email`, `donation_date`, `Net_Contribution_Amount_USD`, `payment_platform`, everything()) %>%  #Most relevant features organized first\n  filter(donation_date>=as.Date(\"2021-11-15\")) # At least for now, remove pre-treatment donation data\n\noftw_21_22_db_don %>% names() %>% paste(collapse=\", \")\n\n\n[1] \"email, primary_email, donation_date, Net_Contribution_Amount_USD, payment_platform, Treatment group, Number of email opens, oftw_partner, school, chapter_type, portfolio, contribution_frequency, pledge_date, pledge_start_date, pledge_end_date, donor_status, cancellation_type, pledge_amount, pledge_contribution_frequency, x\"\n\n\n\n\n1.3.1 Labeling and cleaning\nThe code …\n…makes names snake_case, using original names as labels…\n\n\nCode\nlabelled::var_label(oftw_21_22_mc) <- names(oftw_21_22_mc) \nnames(oftw_21_22_mc) <- snakecase::to_snake_case(names(oftw_21_22_mc)) \n\nlabelled::var_label(oftw_21_22_db_don) <- names(oftw_21_22_db_don) \nnames(oftw_21_22_db_don) <- snakecase::to_snake_case(names(oftw_21_22_db_don)) \n\n\n\n…and anonymizes the data, hashing anything with the chance of being identifying\n\n\nCode\nsalty_hash <- function(x) {\n  salt(.seed = 42, x) %>% hash(.algo = \"crc32\")\n}\n\noftw_21_22_mc <- oftw_21_22_mc %>%\n  dplyr::select(-first_name, -last_name) %>%\n    mutate(across(c(email_address,  employer, school_string), salty_hash))\n\n  \noftw_21_22_db_don <- oftw_21_22_db_don %>%\n      mutate(across(c(primary_email, email, school), salty_hash))\n\n\nRoll up to 1 per person; summarize and pivot_wider\n\n\nCode\noutcomes_base_mc <- c(\"opens\", \"donate_link_clicks\")\n\n\noftw_21_22_mc_wide <- oftw_21_22_mc %>%\n  mutate(treat_emotion = case_when(\n    treatment_group == \"1.000000\" ~ 0,\n    treatment_group == \"2.000000\" ~ 1\n  )) %>%\n  group_by(email_address) %>%\n  mutate(across(all_of(outcomes_base_mc), sum, .names = \"{.col}_tot\")) %>%\n  tidyr::pivot_wider(names_from = email_number,\n    values_from = c(\"opens\", \"donate_link_clicks\")) %>%\n  mutate(d_click_don_link = donate_link_clicks_tot > 0) %>%\n  arrange(email_address) %>%\n  filter(row_number() == 1)\n\noftw_21_22_db_don <- oftw_21_22_db_don %>%\n  ungroup() %>%\n  group_by(email) %>%\n  mutate(\n    don_tot = sum(net_contribution_amount_usd),\n    num_don = n(),\n    d_don = num_don > 0,\n    don_tot_ot = sum(net_contribution_amount_usd[contribution_frequency ==\n        \"One-time\"]),\n    num_don_ot = sum(contribution_frequency == \"One-time\"),\n    d_don_ot = num_don_ot > 0,\n    #WAIT THIS IS NOT WIDE DATA -- don't interpret it as 'number of individuals'\n    don_tot_ss = sum(net_contribution_amount_usd[payment_platform == \"Squarespace\"]),\n    num_don_ss = sum(payment_platform == \"Squarespace\"),\n    d_don_ss = num_don_ss > 0,\n  )\n\n\noftw_21_22_db_don_persons <- oftw_21_22_db_don %>%  \n  arrange(email) %>%\n  filter(row_number()==1)     %>%\nmutate(\n      treat_emotion = case_when(\n        treatment_group==\"1.000000\" ~ 0,\n        treatment_group == \"2.000000\" ~ 1)\n    ) \n\n\noftw_mc_db <- power_full_join(oftw_21_22_mc_wide,\n   oftw_21_22_db_don_persons,  by = c(\"email_address\" = \"email\"), conflict = coalesce_xy) %>%\n   mutate(across(starts_with(\"d_don\"), ~replace(., is.na(.), 0)), #make it a 0 if it's not in the donation database\n   d_open= if_else(!is.na(treat_emotion),1,0)\n  )\n\n\noftw_mc_db_openers <- oftw_mc_db %>% \n  filter(!is.na(treat_emotion))\n\n# oftw_21_22_db_don_wide <- oftw_21_22_db_don %>%\n#   select(email, donation_date, net_contribution_amount_usd, payment_platform) %>% \n#    group_by(email) %>%\n#    mutate(row = row_number()) %>%\n#       tidyr::pivot_wider(names_from = row, values_from = c(\"donation_date\", \"net_contribution_amount_usd\"))\n\n\nPrelim results ::: {.cell}\n\nCode\noftw_mc_db %>% tabyl(treat_emotion, d_don)\n\n\n treat_emotion    0   1\n             0 1139 273\n             1  968 231\n            NA    0 395\n\n\nCode\noftw_mc_db %>% tabyl(treat_emotion, d_don_ss)\n\n\n treat_emotion    0 1\n             0 1404 8\n             1 1190 9\n            NA  391 4\n\n\nCode\noftw_21_22_db_don_persons %>% tabyl(treat_emotion, d_don_ot)\n\n\n treat_emotion FALSE TRUE NA_\n             0   248   15  10\n             1   215   12   4\n            NA   328   59   8\n\n\nCode\n#todo: simple statistical measures along with this\n\n:::\n\n\n1.3.2 Constructing outcome measures, especially ‘donations likely driven by email’\n\nDonations (presence, count, amounts) in giving seasons, 1 row per user (with treatment etc.)\n\n\noverall\nnon-regular\n‘likely from email’\n\nare in Giving Season contributions (BigQuery)\n\nsubset for payment platform = squarespace (unlikely to come from any other checkout page)\nemail as primary key, link to Raw Data (mailchimp), filter on ‘Donate link clicks`>0 (note that one needs aggregating by donor because it is ’per email’)\n\n\nGiving season donations ..\n\nGiving Season contributions (BigQuery), sum donation_date Net_Contribution_Amount_USD with filters for one-time etc\nCan check against fields ‘Total Giving Season contributions Total Giving Season contribution amount’\n\n\n\nCode\n#list/matrix of rates for later use\n\noc_mat <- oftw_mc_db %>% \n  mutate(d_open=n()) %>% \n  group_by(treat_emotion) %>% \n  dplyr::summarise(across(starts_with(\"d_\"), ~sum(.x, na.rm = TRUE), .names = \"tot_{.col}\"))\n\noc_mat_r <- oc_mat %>% filter(!is.na(treat_emotion)) #where treatment observed \n\nassigned_emails <- c(2000, 2000) #I was told that about 4000 emails were sent, 2000 to each group"
  },
  {
    "objectID": "chapters/oftw_upsell_input_first_analysis.html#descriptives-and-exploratory-analysis",
    "href": "chapters/oftw_upsell_input_first_analysis.html#descriptives-and-exploratory-analysis",
    "title": "1  OftW pre-giving-tuesday-email upselling split test (considering ‘impact vs emotion’)",
    "section": "1.4 Descriptives and exploratory analysis",
    "text": "1.4 Descriptives and exploratory analysis\nNotes:2\n\n1.4.1 Donation and outcome summary statistics, by treatment"
  },
  {
    "objectID": "chapters/oftw_upsell_input_first_analysis.html#basic-tests-donation-incidence-and-amounts",
    "href": "chapters/oftw_upsell_input_first_analysis.html#basic-tests-donation-incidence-and-amounts",
    "title": "1  OftW pre-giving-tuesday-email upselling split test (considering ‘impact vs emotion’)",
    "section": "1.5 Basic tests: Donation incidence and amounts",
    "text": "1.5 Basic tests: Donation incidence and amounts\n(See preregistration – go through preregistered tests one at a time. Note that given the observed conversion rates I do not expect any ‘significant differences’.)"
  },
  {
    "objectID": "chapters/oftw_upsell_input_first_analysis.html#basic-tests-clicks-and-retention-outcomes",
    "href": "chapters/oftw_upsell_input_first_analysis.html#basic-tests-clicks-and-retention-outcomes",
    "title": "1  OftW pre-giving-tuesday-email upselling split test (considering ‘impact vs emotion’)",
    "section": "1.6 Basic tests: Clicks and retention outcomes",
    "text": "1.6 Basic tests: Clicks and retention outcomes\nI’m following the approach discussed in the ‘RP methods discussion’ under “Significance and equivalence testing” with randomization inference/simulation; building to Bayes\nWe see a ‘small difference’ between treatment groups and it is ‘not significant in standard tests’ (tests not shown here yet). But can we put meaningful bounds on this? Can we statistically ‘rule out large effects’?\n(This parallels the analysis done in HERE, which includes some further explanation of the methods)\n\n\n\n1.6.1 Difference between two binomial random variables: Bayesian binomial test\n\n\nCode\n#would need to generate 'fill in data' if we want to use bayesAB, which requires actual vectors\n\n#add blank rows for 'assigned'\n\nblank_impact <- as_tibble(matrix(NA, nrow = assigned_emails[1]- oc_mat_r$tot_d_open[1], ncol = NCOL(oftw_mc_db)))\n\n\nWarning: The `x` argument of `as_tibble.matrix()` must have unique column names if `.name_repair` is omitted as of tibble 2.0.0.\nUsing compatibility `.name_repair`.\nThis warning is displayed once every 8 hours.\nCall `lifecycle::last_lifecycle_warnings()` to see where this warning was generated.\n\n\nCode\nnames(blank_impact) <- names(oftw_mc_db)\n\nblank_impact %<>% \n  mutate(across(starts_with(\"d_\"), ~ifelse(is.na(.), 0, 0)),\n    treat_emotion=0)\n  \nblank_emotion <- as_tibble(matrix(NA, nrow = assigned_emails[1]- oc_mat_r$tot_d_open[2], ncol = NCOL(oftw_mc_db)))\nnames(blank_emotion) <- names(oftw_mc_db)\n\nblank_emotion %<>% \n  mutate(across(starts_with(\"d_\"), ~ifelse(is.na(.), 0, 0)),\n    treat_emotion=1)\n\noftw_mc_db_assigned <- \n    bind_rows(oftw_mc_db, blank_impact, blank_emotion) %>%\n  filter(!is.na(treat_emotion))\n\noftw_mc_db_assigned %>% tabyl(treat_emotion)\n\n\n treat_emotion    n percent\n             0 2000     0.5\n             1 2000     0.5\n\n\nOpens by treatment:\n\n\nCode\n# Following r https://www.sumsar.net/blog/2014/06/bayesian-first-aid-prop-test/  \n# alt: http://frankportman.github.io/bayesAB/ \n\n\n#opens_by_treat_fit <- bayes.prop.test(oc_mat_r$tot_d_open, assigned_emails, cred.mass = 0.95) #here I highlight the 95% bounds because it's a strong effect!\n\n#plot(opens_by_treat_fit)\n\nunif_prior <- c('alpha' = 1, 'beta' = 1)\n \nempir_prior <- c('alpha' = sum(oc_mat_r$tot_d_open), 'beta' = sum(assigned_emails))\n\n\n#same with AB  package\n# Fit bernoulli test\nopens_by_treat_AB <- bayesAB::bayesTest(\n  oftw_mc_db_assigned$d_open[oftw_mc_db_assigned$treat_emotion==0],\n  oftw_mc_db_assigned$d_open[oftw_mc_db_assigned$treat_emotion==1],\n                 priors = unif_prior,\n                 distribution = 'bernoulli')\n\nopens_by_treat_AB_empir <- bayesAB::bayesTest(\n  oftw_mc_db_assigned$d_open[oftw_mc_db_assigned$treat_emotion==0],\n  oftw_mc_db_assigned$d_open[oftw_mc_db_assigned$treat_emotion==1],\n                 priors = empir_prior,\n                 distribution = 'bernoulli')\n\nplot(opens_by_treat_AB) \n\n\n\n\n\n\n\n\n\n\n\nCode\nplot(opens_by_treat_AB_empir) \n\n\n\n\n\n\n\n\n\n\n\nCode\n#WTF -- I need to advance this by command prompt!?\n\n#AB1 <- bayesTest(oftw_21_22_db_don_persons$d_don_ot[trea], B_binom, priors = c('alpha' = 65, 'beta' = 200), n_samples = 1e5, distribution = 'bernoulli')\n\n\n\n\n‘Some donation’ by treatment (only for those who opened, otherwise donations are surely undercounted for Emotion treatment)\n\n\nCode\noftw_21_22_db_don_persons %>% tabyl(treat_emotion, d_don)\n\n\n treat_emotion TRUE\n             0  273\n             1  231\n            NA  395\n\n\nCode\nempir_prior <- c('alpha' = sum(oc_mat_r$tot_d_don), 'beta' = sum(oc_mat_r$tot_d_open))\n\n(\n  don_by_treat_opened_fit <- bayes.prop.test(oc_mat_r$tot_d_don, oc_mat_r$tot_d_open, cred.mass = 0.80) # 80% credible interval for decision-making purposes\n)\n\n\n\n    Bayesian First Aid proportion test\n\ndata: oc_mat_r$tot_d_don out of oc_mat_r$tot_d_open\nnumber of successes:   273,  231\nnumber of trials:     1412, 1199\nEstimated relative frequency of success [80% credible interval]:\n  Group 1: 0.19 [0.18, 0.21]\n  Group 2: 0.19 [0.18, 0.21]\nEstimated group difference (Group 1 - Group 2):\n  0 [-0.02, 0.02]\nThe relative frequency of success is larger for Group 1 by a probability\nof 0.515 and larger for Group 2 by a probability of 0.485 .\n\n\nCode\nplot(don_by_treat_opened_fit)\n\n\n\n\n\nCode\n#same with AB  package\n# Fit bernoulli test\ndon_by_treat_AB <- bayesAB::bayesTest(\n  oftw_mc_db_openers$d_don[oftw_mc_db_openers$treat_emotion==0],\n  oftw_mc_db_openers$d_don[oftw_mc_db_openers$treat_emotion==1],\n                 priors = unif_prior,\n                 distribution = 'bernoulli')\n\ndon_by_treat_AB_empir <- bayesAB::bayesTest(\n  oftw_mc_db_openers$d_don[oftw_mc_db_openers$treat_emotion==0],\n  oftw_mc_db_openers$d_don[oftw_mc_db_openers$treat_emotion==1],\n                 priors = empir_prior,\n                 distribution = 'bernoulli')\n\nplot(don_by_treat_AB) \n\n\n\n\n\n\n\n\n\n\n\nCode\nplot(don_by_treat_AB_empir) \n\n\n\n\n\n\n\n\n\n\n\nThus we put 80% probability on the difference between the donation rates being no more than (hard-coded) .023/.19 = 12% in either direction. Note that this is not terribly narrowly bounded.\n\n\nNext, for one-time donations only; again as a share of opens\n\n\nCode\n(\n  don_ot_by_treat_opened_fit <- bayes.prop.test(oc_mat_r$tot_d_don_ot, oc_mat_r$tot_d_open, cred.mass = 0.80) # 80% credible interval for decision-making purposes\n)\n\n\n\n    Bayesian First Aid proportion test\n\ndata: oc_mat_r$tot_d_don_ot out of oc_mat_r$tot_d_open\nnumber of successes:    15,   12\nnumber of trials:     1412, 1199\nEstimated relative frequency of success [80% credible interval]:\n  Group 1: 0.011 [0.0075, 0.015]\n  Group 2: 0.011 [0.0068, 0.014]\nEstimated group difference (Group 1 - Group 2):\n  0 [-0.0048, 0.0056]\nThe relative frequency of success is larger for Group 1 by a probability\nof 0.55 and larger for Group 2 by a probability of 0.45 .\n\n\nCode\nempir_prior <- c('alpha' = sum(oc_mat_r$tot_d_don_ot), 'beta' = sum(oc_mat_r$tot_d_open))\n\n#same with AB  package\n# Fit bernoulli test\ndon_ot_by_treat_AB <- bayesAB::bayesTest(\n  oftw_mc_db_openers$d_don_ot[oftw_mc_db_openers$treat_emotion==0],\n  oftw_mc_db_openers$d_don_ot[oftw_mc_db_openers$treat_emotion==1],\n                 priors = unif_prior,\n                 distribution = 'bernoulli')\n\ndon_ot_by_treat_AB_empir <- bayesAB::bayesTest(\n  oftw_mc_db_openers$d_don_ot[oftw_mc_db_openers$treat_emotion==0],\n  oftw_mc_db_openers$d_don_ot[oftw_mc_db_openers$treat_emotion==1],\n                 priors = empir_prior,\n                 distribution = 'bernoulli')\n\nplot(don_ot_by_treat_AB) \n\n\n\n\n\n\n\n\n\n\n\nCode\nplot(don_ot_by_treat_AB_empir) \n\n\n\n\n\n\n\n\n\n\n\nCode\ndon_ot_by_treat_AB %>% summary(credInt=0.9)\n\n\nQuantiles of posteriors for A and B:\n\n$Probability\n$Probability$A\n         0%         25%         50%         75%        100% \n0.002702340 0.009300256 0.011076158 0.013056869 0.028481793 \n\n$Probability$B\n         0%         25%         50%         75%        100% \n0.002578133 0.008699817 0.010557270 0.012664164 0.031399003 \n\n\n--------------------------------------------\n\nP(A > B) by (0)%: \n\n$Probability\n[1] 0.5518\n\n--------------------------------------------\n\nCredible Interval on (A - B) / B for interval length(s) (0.9) : \n\n$Probability\n       5%       95% \n-0.434144  0.969118 \n\n--------------------------------------------\n\nPosterior Expected Loss for choosing A over B:\n\n$Probability\n[1] 0.1618676\n\n\nCode\ndon_ot_by_treat_AB_lift_int80 <- don_ot_by_treat_AB %>% summary(credInt=0.8)\n\n\ndon_ot_by_treat_AB_lift_int80_empir <- don_ot_by_treat_AB_empir %>% summary(credInt=0.8)\n\n\n80% credible intervals with the uniform prior for the ‘lift’ of Impact relative to Emotion are\n-0.351, 0.707\nand for the empirically informed (but symmetric prior):\n-0.234, 0.357\n(Hard-coded) Here there is just a trace of suggestive evidence that the emotion treatment performed worse. But even our 80% bounds are very wide.\n\n\nFor ‘Squarespace donations only’; these are the donations that plausibly came from the email. First as a share of opens for each treatment :\n\n\nCode\nempir_prior <- c('alpha' = sum(oc_mat_r$tot_d_don_ss), 'beta' = sum(oc_mat_r$tot_d_open))\n\n\n(\n  don_ss_by_treat_opened_fit <- bayes.prop.test(oc_mat_r$tot_d_don_ss, oc_mat_r$tot_d_open, cred.mass = 0.80) # 80% credible interval for decision-making purposes\n)\n\n\n\n    Bayesian First Aid proportion test\n\ndata: oc_mat_r$tot_d_don_ss out of oc_mat_r$tot_d_open\nnumber of successes:     8,    9\nnumber of trials:     1412, 1199\nEstimated relative frequency of success [80% credible interval]:\n  Group 1: 0.0062 [0.0033, 0.0085]\n  Group 2: 0.0081 [0.0047, 0.011]\nEstimated group difference (Group 1 - Group 2):\n  0 [-0.0062, 0.0023]\nThe relative frequency of success is larger for Group 1 by a probability\nof 0.282 and larger for Group 2 by a probability of 0.718 .\n\n\nCode\n#same with AB  package\n# Fit bernoulli test\ndon_ss_by_treat_AB <- bayesAB::bayesTest(\n  oftw_mc_db_openers$d_don_ss[oftw_mc_db_openers$treat_emotion==0],\n  oftw_mc_db_openers$d_don_ss[oftw_mc_db_openers$treat_emotion==1],\n                 priors = unif_prior,\n                 distribution = 'bernoulli')\n\ndon_ss_by_treat_AB_empir <- bayesAB::bayesTest(\n  oftw_mc_db_openers$d_don_ss[oftw_mc_db_openers$treat_emotion==0],\n  oftw_mc_db_openers$d_don_ss[oftw_mc_db_openers$treat_emotion==1],\n                 priors = empir_prior,\n                 distribution = 'bernoulli')\n\n\nplot(don_ss_by_treat_AB) \n\n\n\n\n\n\n\n\n\n\n\nCode\nplot(don_ss_by_treat_AB_empir) \n\n\n\n\n\n\n\n\n\n\n\nCode\ndon_ss_by_treat_AB %>% summary(credInt=0.9)\n\n\nQuantiles of posteriors for A and B:\n\n$Probability\n$Probability$A\n          0%          25%          50%          75%         100% \n0.0009902386 0.0048437368 0.0061367516 0.0076340142 0.0191421384 \n\n$Probability$B\n         0%         25%         50%         75%        100% \n0.001462728 0.006437438 0.008042132 0.009891706 0.025724099 \n\n\n--------------------------------------------\n\nP(A > B) by (0)%: \n\n$Probability\n[1] 0.27906\n\n--------------------------------------------\n\nCredible Interval on (A - B) / B for interval length(s) (0.9) : \n\n$Probability\n        5%        95% \n-0.6515304  0.6391667 \n\n--------------------------------------------\n\nPosterior Expected Loss for choosing A over B:\n\n$Probability\n[1] 0.5346835\n\n\nCode\ndon_ss_by_treat_AB_lift_int80 <- don_ss_by_treat_AB %>% summary(credInt=0.8)\n\n\ndon_ss_by_treat_AB_lift_int80_empir <- don_ss_by_treat_AB_empir %>% summary(credInt=0.8)\n\n\n80% credible intervals with the uniform prior for the ‘lift’ of Impact relative to Emotion are\n-0.583, 0.383\nand for the empirically informed (but symmetric prior):\n-0.367, 0.304\n(Hard-coded) Again, even our 80% bounds are very wide.\n\n\nFinally, we consider the above as a share of total emails sent, allowing that ‘opens’ is non-random,\n… and also implicitly assuming that the only impact of these treatments could be on the Squarespace donations made by someone who did open the email.\n\n\nCode\n(\n  don_ss_by_treat_opened_fit_all <- bayes.prop.test(oc_mat_r$tot_d_don_ss, assigned_emails,\n    cred.mass = 0.80) # 80% credible interval for decision-making purposes\n)\n\n\n\n    Bayesian First Aid proportion test\n\ndata: oc_mat_r$tot_d_don_ss out of assigned_emails\nnumber of successes:     8,    9\nnumber of trials:     2000, 2000\nEstimated relative frequency of success [80% credible interval]:\n  Group 1: 0.0043 [0.0025, 0.0062]\n  Group 2: 0.0049 [0.0029, 0.0067]\nEstimated group difference (Group 1 - Group 2):\n  0 [-0.0033, 0.0022]\nThe relative frequency of success is larger for Group 1 by a probability\nof 0.405 and larger for Group 2 by a probability of 0.595 .\n\n\nCode\n# \n#same with AB package\n\nempir_prior <- c('alpha' = sum(oc_mat_r$tot_d_don_ss), 'beta' = sum(assigned_emails))\n\n\n# Fit Bernoulli test\ndon_ss_by_treat_all_AB <- bayesAB::bayesTest(\n  oftw_mc_db_assigned$d_don_ss[oftw_mc_db_assigned$treat_emotion==0],\n  oftw_mc_db_assigned$d_don_ss[oftw_mc_db_assigned$treat_emotion==1],\n                 priors = unif_prior,\n                 distribution = 'bernoulli')\n\ndon_ss_by_treat_all_AB_empir <- bayesAB::bayesTest(\n  oftw_mc_db_assigned$d_don_ss[oftw_mc_db_assigned$treat_emotion==0],\n  oftw_mc_db_assigned$d_don_ss[oftw_mc_db_assigned$treat_emotion==1],\n                 priors = empir_prior,\n                 distribution = 'bernoulli')\n\nplot(don_ss_by_treat_all_AB) \n\n\n\n\n\n\n\n\n\n\n\nCode\nplot(don_ss_by_treat_all_AB_empir) \n\n\n\n\n\n\n\n\n\n\n\nCode\ndon_ss_by_treat_all_AB %>% summary(credInt=0.9)\n\n\nQuantiles of posteriors for A and B:\n\n$Probability\n$Probability$A\n          0%          25%          50%          75%         100% \n0.0006591401 0.0034229384 0.0043367467 0.0053948239 0.0139389081 \n\n$Probability$B\n          0%          25%          50%          75%         100% \n0.0008503472 0.0038633646 0.0048302873 0.0059443205 0.0137935894 \n\n\n--------------------------------------------\n\nP(A > B) by (0)%: \n\n$Probability\n[1] 0.4076\n\n--------------------------------------------\n\nCredible Interval on (A - B) / B for interval length(s) (0.9) : \n\n$Probability\n        5%        95% \n-0.5874267  0.9235146 \n\n--------------------------------------------\n\nPosterior Expected Loss for choosing A over B:\n\n$Probability\n[1] 0.353655\n\n\nCode\ndon_ss_by_treat_all_AB_lift_int80 <- don_ss_by_treat_all_AB %>% summary(credInt=0.8)\n\n\ndon_ss_by_treat_all_AB_lift_int80_empir <- don_ss_by_treat_all_AB_empir %>% summary(credInt=0.8)\n\n\n80% credible intervals with the uniform prior for the ‘lift’ of Impact relative to Emotion are\n\n\nCode\n op(don_ss_by_treat_all_AB_lift_int80$interval$Probability)\n\n\n     10%      90% \n\"-0.507\" \" 0.621\" \n\n\nand for the empirically informed (but symmetric prior):\n\n\nCode\nop(don_ss_by_treat_all_AB_lift_int80_empir$interval$Probability)\n\n\n     10%      90% \n\"-0.329\" \" 0.379\" \n\n\nHard-coded: Here there is almost no evidence in either direction. However, our 80% credible intervals remain wide.\n\n\nUnfortunately, this experiment proved to be underpowered, at least for the donation outcome.\nBut what about clicks on the ‘donation link’? This could arguably be seen as a measure of ‘desire and intention to donate’, and thus might be a more fine-grained and less noisy measure, improving our statistical power.\nSome quick crosstabs (here as a share of opens)\n\n\nCode\n(\n  donclick_by_treat <-  oftw_mc_db %>% \n  filter(!is.na(treat_emotion)) %>% \n  tabyl(treat_emotion, d_click_don_link) %>%\n    adorn_percentages(\"row\") %>%\n    adorn_pct_formatting() %>%\n    adorn_ns() %>%\n    adorn_title() %>% \n    kable(caption =\"Click on donation link by treatment; all opened emails\")  %>% \n  kable_styling(latex_options = \"scale_down\")\n)\n\n\n\nClick on donation link by treatment; all opened emails\n \n  \n     \n    d_click_don_link \n     \n     \n  \n \n\n  \n    treat_emotion \n    FALSE \n    TRUE \n    NA_ \n  \n  \n    0 \n    97.5% (1376) \n    2.1% (29) \n    0.5% (7) \n  \n  \n    1 \n    94.6% (1134) \n    4.7% (56) \n    0.8% (9) \n  \n\n\n\n\n\nIf this is our metric, it only seems fair to take into account ‘whether they opened the email’ as part of this effect. Thus, considering clicks as a share of total emails sent…\n\n\nCode\n(\n  click_don_by_treat_opened_fit <- bayes.prop.test(oc_mat_r$tot_d_click_don_link, assigned_emails,\n    cred.mass = 0.95) # 80% credible interval for decision-making purposes\n)\n\n\n\n    Bayesian First Aid proportion test\n\ndata: oc_mat_r$tot_d_click_don_link out of assigned_emails\nnumber of successes:    29,   56\nnumber of trials:     2000, 2000\nEstimated relative frequency of success [95% credible interval]:\n  Group 1: 0.015 [0.0098, 0.020]\n  Group 2: 0.028 [0.021, 0.036]\nEstimated group difference (Group 1 - Group 2):\n  -0.01 [-0.023, -0.0046]\nThe relative frequency of success is larger for Group 1 by a probability\nof 0.002 and larger for Group 2 by a probability of 0.998 .\n\n\nCode\nplot(click_don_by_treat_opened_fit)\n\n\n\n\n\n\n\nCode\n#same with AB  package\n\nempir_prior <- c('alpha' = sum(oc_mat_r$tot_d_click_don_link), 'beta' = sum(assigned_emails))\n\noftw_mc_db_assigned <- oftw_mc_db_assigned %>% dplyr::filter(!is.na(d_click_don_link))\n\n# Fit bernoulli test\ndon_click_by_treat_all_AB <- bayesAB::bayesTest(\n  oftw_mc_db_assigned$d_click_don_link[oftw_mc_db_assigned$treat_emotion==0],\n  oftw_mc_db_assigned$d_click_don_link[oftw_mc_db_assigned$treat_emotion==1],\n                 priors = unif_prior,\n                 distribution = 'bernoulli')\n\ndon_click_by_treat_all_AB_empir <- bayesAB::bayesTest(\n  oftw_mc_db_assigned$d_click_don_link[oftw_mc_db_assigned$treat_emotion==0],\n  oftw_mc_db_assigned$d_click_don_link[oftw_mc_db_assigned$treat_emotion==1],\n                 priors = empir_prior,\n                 distribution = 'bernoulli')\n\nplot(don_click_by_treat_all_AB) \n\n\n\n\n\n\n\n\n\n\n\nCode\nplot(don_click_by_treat_all_AB_empir) \n\n\n\n\n\n\n\n\n\n\n\nCode\ndon_click_by_treat_all_AB %>% summary(credInt=0.9)\n\n\nQuantiles of posteriors for A and B:\n\n$Probability\n$Probability$A\n         0%         25%         50%         75%        100% \n0.005613925 0.013111564 0.014855512 0.016785020 0.030921759 \n\n$Probability$B\n        0%        25%        50%        75%       100% \n0.01457222 0.02602580 0.02846221 0.03102267 0.04764887 \n\n\n--------------------------------------------\n\nP(A > B) by (0)%: \n\n$Probability\n[1] 0.00155\n\n--------------------------------------------\n\nCredible Interval on (A - B) / B for interval length(s) (0.9) : \n\n$Probability\n        5%        95% \n-0.6412379 -0.2472723 \n\n--------------------------------------------\n\nPosterior Expected Loss for choosing A over B:\n\n$Probability\n[1] 0.9686057\n\n\nCode\ndon_click_by_treat_all_AB_lift_int80 <- don_click_by_treat_all_AB %>% summary(credInt=0.8)\n\ndon_click_by_treat_all_AB_lift_int80_empir <- don_click_by_treat_all_AB_empir %>% summary(credInt=0.8)\n\n\n80% credible intervals with the uniform prior for the ‘lift’ of Impact relative to Emotion are\n-0.610, -0.304\nand for the empirically informed (but symmetric prior):\n-0.3119, -0.0531\n(Hard-coded)\nThere is fairly strong evidence that the emotion email lead to a higher rate of clicks on the donation link; note that this even is in spite of the lower rate of email opens.\nThis suggests (IMO) it is worth testing this further.\n\n\n1.6.2 Redoing a bunch of stuff manually\nFirst, some building blocks;\nthe probability distribution over the absolute value of differences between two binomial random variables\nAdapting formulas from Stackexchange post discussion\nDefining their code for this function: ::: {.cell}\n\nCode\nmodBin <- dbinom #DR: I just do this renaming here for consistency with the rest ... but the modBin they defined was redundant as it's already built ins\n\ndiffBin <- function(z, n1, p1, n2, p2){\n\n  prob <- 0\n\n  if (z>=0){\n    for (i in 1:n1){\n      prob <- prob + modBin(i+z, n1, p1) * modBin(i, n2, p2)\n    }\n\n  }\n  else\n  {\n    for (i in 1:n2){\n      prob<-prob+modBin(i+z, n1, p1)*modBin(i, n2, p2)\n    }\n  }\n  return(prob)\n}\n\n:::\n\n\nWe generate an alternate version to cover ‘differences in one direction, i.e., but ’probability of observing (d1-d2)/(n1+n2) share more of d1 responses than d2 responses given sample sizes n1 and n2… over a range of true probabilities p1 and p2’\nthe probability distribution for differences between two binomial random variables in one direction\n\n\n\nFor the present case\nHard-coded notes…\n::: {.foldable}\n\n\n\nCode\nn1 <- oc_mat_r$tot_d_open[1]\nn2 <- oc_mat_r$tot_d_open[2]\nd1 <- oc_mat_r$tot_d_click_don_link[1]\nd2 <- oc_mat_r$tot_d_click_don_link[2]\nz <- d1-d2 #impact minus emotion\n\n\nComputation for a few ‘ad-hoc cases’ (later explore the space with vectors of values)\n\nSuppose truly equal incidence, at the mean level\n\n\n\nCode\np1 <- (d1+d2)/(n1+n2)\n\np2 <- p1\n\n(\n  db_0 <- diffBin(z, n1, p1, n2, p2)\n)\n\n\n[1] 3.963627e-05\n\n\nThis implies there is a 0.00396% chance of getting this exact difference of +-27 incidence(s) between the treatments (in one direction), if the true incidence rates were equal.\nLet’s plot this for a range of ‘incidence rate differences’ in this region. (Sorry, using the traditional plot, ggplot is better).\n\n\nCode\ns <- seq(-10*z, 10*z)\np<-sapply(s, function(z) diffBin(z, n1, p1, n2, p2))\nplot(s,p)\n\n\n\n\n\nWe see a large likelihood of values in the range of the +-27 difference observed, and a low likelihood of a difference of 10 or more in either direction.\n\n\n1.6.3 Adaptation: ‘of this magnitude or smaller’\n\n\nCode\nltmag_diffBin <- function(z, n1, p1, n2, p2){\n  prob <- 0\n  z_n <- -z #negative value\n\n  for (i in z_n:z){     #sum for all integer differences between observed value and its negative, inclusive\n    prob <- prob + diffBin(i, n1, p1, n2, p2)\n    }\n\n  return(prob)\n}\n\n\nNow, a similar computation as above, but for ‘a difference this big or smaller in magnitude’:\n\n\nCode\n  (\n    mag_db_0 <- ltmag_diffBin(z, n1, p1, n2, p2)\n  )\n\n\n[1] 0.9880585\n\n\nThis implies there is a 98.8% chance of getting a difference no larger than this one in magnitude of +/–27 incidences between the treatments if the true incidence rates were equal.\n\n\nAnd finally, what we were looking for: the chance of ‘a difference this small or smaller’ as a function of the true difference…\n(Think about: should we do this for ‘a difference in the same direction’ instead?)\nSet up an arbitrary vector of ‘true differences’ \nBelow, I plot\nY-axis: ’how likely would be a difference in donations ‘as small or smaller in magnitude’” than we see in the data against…\nX-axis: if the “true difference in incidence rates” were of these magnitudes\n(Note: this should cover ‘a difference in either direction’; the probability of a difference in the direction we do see is obviously somewhat smaller)\n\n\nCode\noptions(scipen=999)\n\nB <- c(1, 1.5, 2, 2.5, 3)\n\np1 <- rep((d1+d2)/(n1+n2), length(B))\np2 <- p1*B\n\n\nas.list(ltmag_diffBin(z, n1, p1, n2, p2)*100) %>% format(digits=3, scientific=FALSE)\n\n\n[1] \"98.8\"   \"93.2\"   \"33.6\"   \"1.81\"   \"0.0157\"\n\n\nCode\nprobmag <- ltmag_diffBin(z, n1, p1, n2, p2)\n\n\n#qplot(B, probmag, log  = \"x\", xlab = \"True relative incidence\", ylab =\"Prob. of difference this small\")\n\n(\n  probmag_plot <-\n    ggplot() +\n  aes(x=B, y=probmag) +\n  geom_point() +\n  scale_x_continuous(trans='log2') +\n    ylim(0,1) +\n    xlab(\"True relative incidence rate\") +\n    ylab(\"Prob. diff. as small as obsd\")\n\n)\n\n\n\n\n\nHard-coded takeaways 15 Dec 2021 :\nOur data is consistent with ‘no difference’ (of course) … but its also consistent with ‘a fairly large difference in incidence’\nE.g., even if one treatment truly lead to ‘twice as many donations as the other’, we still have a 20% chance of seeing a differences as small as the one we see (of 8 versus 6)\nWe can reasonably ‘rule out’ differences of maybe 2.5x or greater\nMain point: given the rareness of donations in this context, our sample size doesn’t let us make very strong conclusions in either directions … at least not yet. I hope that combined with other evidence, we will be able to infer more\n\n\n1.6.4 Quick redo assuming equal shares recieved each email, and treating ‘email reciepts as denom’\nApprox 4000 total emails sent?\nFor squarespace\n\n\nCode\nn1 <- 2000\nn2 <- 2000\nd1 <- 10\nd2 <- 9\nz <- d1-d2\n\nB <- c(1/3, 1/2.5, 1/2, 1/1.5, 1, 1.5, 2, 2.5, 3)\n\np1 <- rep((d1+d2)/(n1+n2), length(B))\np2 <- p1*B\n\n\n\n(\n    mag_db_0_ss <- ltmag_diffBin(z, n1, p1, n2, p2)\n  )\n\n\n[1] 0.071197896 0.100275616 0.147727269 0.220724651 0.272100392 0.154218060\n[7] 0.046306831 0.009174658 0.001345637\n\n\nCode\nprobmag_ss <- ltmag_diffBin(z, n1, p1, n2, p2)\n\n\n(\n  probmag_plot_ss <-\n    ggplot() +\n  aes(x=B, y=probmag_ss) +\n  geom_point() +\n  scale_x_continuous(trans='log2') +\n    ylim(0,.51) +\n    xlab(\"True relative incidence rate\") +\n    ylab(\"Prob. diff. as small as obsd\")\n\n)\n\n\n\n\n\nCode\n#note that it is not symmetric bc (I think) a very low incidence on one side makes particular large observed proportional differences more likely\n\n\nFor all one-time donations\n\n\nCode\nn1 <- 2000\nn2 <- 2000\nd1 <- 15\nd2 <- 12\nz <- d1-d2\n\nB <- c(1/3, 1/2.5, 1/2, 1/1.5, 1, 1.5, 2, 2.5, 3)\n\np1 <- rep((d1+d2)/(n1+n2), length(B))\np2 <- p1*B\n\n\n(\n    mag_db_0 <- ltmag_diffBin(z, n1, p1, n2, p2)\n  )\n\n\n[1] 0.0922168538 0.1395427545 0.2249330548 0.3745240308 0.5032003013\n[6] 0.2505329859 0.0521354769 0.0059810731 0.0004413855\n\n\n(the below halts on build, so I commented it out)\n\n\nCode\n(\n  probmag_plot_ot <-\n    ggplot() +\n  aes(x=B, y=probmag) +\n  geom_point() +\n  scale_x_continuous(trans='log2') +\n    ylim(0,.51) +\n    xlab(\"True relative incidence rate\") +\n    ylab(\"Prob. diff. as small as obsd\")\n\n)"
  },
  {
    "objectID": "chapters/oftw_upsell_input_first_analysis.html#demographics-and-interactions-to-do",
    "href": "chapters/oftw_upsell_input_first_analysis.html#demographics-and-interactions-to-do",
    "title": "1  OftW pre-giving-tuesday-email upselling split test (considering ‘impact vs emotion’)",
    "section": "1.7 Demographics and interactions (to do)",
    "text": "1.7 Demographics and interactions (to do)"
  },
  {
    "objectID": "chapters/tlycs_placeholder.html",
    "href": "chapters/tlycs_placeholder.html",
    "title": "2  The Life You Can Save trial: redacted (empty)",
    "section": "",
    "text": "As we have not (yet) been given explicit permission to share the details of the trial with The Life You Can Save, we are not hosting it in the public version"
  },
  {
    "objectID": "chapters/gwwc_gg.html",
    "href": "chapters/gwwc_gg.html",
    "title": "3  Giving What We Can: Giving guides",
    "section": "",
    "text": "our Effective Giving Guide Lead Generation campaign … ran late November 2021 - January 2022. The objective of this campaign was to see whether a factual or cause led approach was more cost effective at getting people to fill out a form and give us their email in order to download our Effective Giving Guide.\n\n\nIn the original version of our test, we had 1 video for the factual appeal and 3 videos for the cause led approach - 1 for global health and development, 1 for animal welfare and 1 for climate change.\n\n\nWe targeted our ads to audiences we thought were likely to engage based on their interests and demographics, and targeted the cause led videos to a relevant audience, i.e. climate change message to climate change audience.\n\n\nWe also had various text above the videos that were displayed and optimised too.\n\nDetails in Gitbook HERE and Gdoc here\n\n\nCode\nknitr::include_url(\"https://effective-giving-marketing.gitbook.io/untitled/partner-organizations-and-trials/gwwc/giving-guides-+s\")"
  },
  {
    "objectID": "chapters/gwwc_gg.html#capturing-data",
    "href": "chapters/gwwc_gg.html#capturing-data",
    "title": "3  Giving What We Can: Giving guides",
    "section": "3.2 Capturing data",
    "text": "3.2 Capturing data"
  },
  {
    "objectID": "chapters/gwwc_fb.html",
    "href": "chapters/gwwc_fb.html",
    "title": "4  Giving What We Can: Feb 22 Facebook Message Test",
    "section": "",
    "text": "Details in Gitbook HERE and Gdoc here\n\n\nCode\nknitr::include_url(\"https://effective-giving-marketing.gitbook.io/untitled/partner-organizations-and-trials/gwwc/feb-22-message-test\")"
  },
  {
    "objectID": "chapters/gwwc_fb.html#capturing-data",
    "href": "chapters/gwwc_fb.html#capturing-data",
    "title": "4  Giving What We Can: Feb 22 Facebook Message Test",
    "section": "4.2 Capturing data",
    "text": "4.2 Capturing data\n\n\n\n\n\n\nBringing in the data Erin coded\n\n\n\n\n\nAs a start, I source build work (Erin’s work, which I edited a bit) to bring in (and store) the data. I would do the coding a bit differently (more ‘tidyverse’ and less repetition), but it may not be worth redoing at this point.\n\n\n\n\n\nCode\n#this seems to be what Erin used ... but what is \n\nsource(here(\"gwwc\", \"build_GWWC_Feb_22_Message_test.R\"))"
  },
  {
    "objectID": "chapters/gwwc_gg.html#build-source-data-input-and-cleaning-code",
    "href": "chapters/gwwc_gg.html#build-source-data-input-and-cleaning-code",
    "title": "3  Giving What We Can: Giving guides",
    "section": "3.2 Build: Source data input and cleaning code",
    "text": "3.2 Build: Source data input and cleaning code\n\n\n\n\n\n\nUpdate: The discussion below does not pertain to the actual raw data.\n\n\n\n\n\nThe actual original/raw data is collapsed (breakdowns) by demography and ad set, into 2 files:\nvideo breakdown.csv\ntext breakdown.csv\nThat data is clearly not identifying individuals; it involves aggregates based on real or assumed characteristics … and, as the other data is derived from it, there is clearly nothing that needs to be hidden there\nWe input the actual raw data below.\n\n\n\n\n\nCode\nraw_gwwc_gg_vid <-  read.csv(here(raw_data_path, \"video breakdown.csv\")) %>% as_tibble()\n\n\nError in is.factor(x): object 'raw_data_path' not found\n\n\nCode\nraw_gwwc_gg_text <-  read.csv(here(raw_data_path, \"text breakdown.csv\")) %>% as_tibble()\n\n\nError in is.factor(x): object 'raw_data_path' not found\n\n\n\n\n\n\n\n\nAccess to data\n\n\n\n\n\nNote: You must have access to the gwwc raw data to run this. This includes data that was constructed (with what code?) by expanding Facebook’s aggregate reporting.\nThe files:\ntextdata_dv_linkclicks.csv videodata_dv_results.csv textdata_dv_results.csv videodata_dv_linkclicks.csv\nare gitignored because of size\n\n\n\n\n\nCode\nraw_data_path <- list(\"gwwc\", \"gg_raw_data_shareable\")\n\nsource(here(\"gwwc\", \"giving_guides\", \"input_build_gwwc_gg_data_results.R\"))\n\n#source(here(\"gwwc\", \"giving_guides\", \"input_build_gwwc_gg_data_clicks.R\"))\n\n\nThe code above inputs and builds 2-4 related data frames (tibbles), which were constructed from the collapsed (aggregated) data\ngwwc_text_clicks: Observations of link clicks … by texts above video gwwc_vid_clicks: … by video content\n(I ignore the ‘click data’ results for now because I don’t think it is particularly meaningful.)\ngwwc_text_results: Observations of emails provided … by texts above video gwwc_vid_results: … by video content"
  },
  {
    "objectID": "chapters/gwwc_gg.html#asking-and-answering-questions",
    "href": "chapters/gwwc_gg.html#asking-and-answering-questions",
    "title": "3  Giving What We Can: Giving guides",
    "section": "3.3 Asking and answering questions",
    "text": "3.3 Asking and answering questions\n\n\n\n\n\n\nThis dynamic document format allows us to ask and answer a series of questions\n\n\n\n\n\n\nUsing the data, with all coding steps shown\nIdeally, following a pre-defined (pre-analysis) plan\nUsing the data and statistics directly and automatically in the narrative\n\nAnd everything will be automatically adjusted if we bring in new data or adjust/correct features"
  },
  {
    "objectID": "chapters/gwwc_gg.html#analysis-and-visuals-moved-from-erins-work",
    "href": "chapters/gwwc_gg.html#analysis-and-visuals-moved-from-erins-work",
    "title": "3  Giving What We Can: Giving guides",
    "section": "3.4 Analysis and visuals (moved from Erin’s work)",
    "text": "3.4 Analysis and visuals (moved from Erin’s work)\n\n\nCode\n#summary(gwwc_vid_results$DV_costadj)\n#summary(gwwc_vid_results$DV)\n#summary(gwwc_vid_results$ave.cost.impr)\n\n\nData summary\n\nBelow, a few data summary bits (from Erin). I commented most of it out and will redo it using an automated and formatted ‘key summary statistics’ package.\n\n\n\nCode\ngwwc_vid_results %>% group_by(Age) %>% summarise(n=n()) %>% .kable()\n\n\n\n \n  \n    Age \n    n \n  \n \n\n  \n    25-34 \n    287,682 \n  \n  \n    13-17 \n    444 \n  \n  \n    18-24 \n    147,805 \n  \n  \n    35-44 \n    158,352 \n  \n  \n    45-54 \n    48,728 \n  \n  \n    55-64 \n    60,904 \n  \n  \n    65+ \n    66,198 \n  \n\n\n\n\n\nCode\ngwwc_vid_results %>% group_by(Gender) %>% summarise(n=n())  %>% .kable()\n\n\n\n \n  \n    Gender \n    n \n  \n \n\n  \n    female \n    573,705 \n  \n  \n    male \n    178,321 \n  \n  \n    unknown \n    18,087 \n  \n\n\n\n\n\nCode\n#print(gwwc_vid_results %>% group_by(Gender,Age) %>% summarise(n=n(),cost=mean(ave.cost.impr)),n=40)\n#print(gwwc_vid_results %>% group_by(Ad.Set.Name) %>% summarise(n=n(),cost=mean(ave.cost.impr)),n=41)\n#print(gwwc_vid_results %>% group_by(Campaign.name,Ad.Set.Name) %>% summarise(n=n(),cost=mean(ave.cost.impr)),n=100)\ngwwc_vid_results %>% group_by(audience) %>% summarise(n=n(),cost=mean(ave.cost.impr)*100) %>% .kable(digits=2)\n\n\n\n \n  \n    audience \n    n \n    cost \n  \n \n\n  \n    philanthropy \n    248,852 \n    2.20 \n  \n  \n    animal \n    187,212 \n    2.22 \n  \n  \n    climate \n    139,824 \n    1.81 \n  \n  \n    general \n    57,012 \n    1.30 \n  \n  \n    lookalike \n    67,359 \n    2.66 \n  \n  \n    poverty \n    69,404 \n    1.82 \n  \n  \n    retargeting \n    450 \n    2.50 \n  \n\n\n\n\n\nCode\ngwwc_vid_results %>% group_by(message) %>% summarise(n=n(),cost=mean(ave.cost.impr)*100) %>% .kable(digits=2)\n\n\n\n \n  \n    message \n    n \n    cost \n  \n \n\n  \n    Factual \n    291,027 \n    2.24 \n  \n  \n    Emotional \n    274,718 \n    2.37 \n  \n  \n    Hypercube \n    75,790 \n    1.76 \n  \n  \n    PPCo \n    128,578 \n    1.25 \n  \n\n\n\n\n\n### CHART DATA\n\n\nCode\n#print(gwwc_vid_results %>% group_by(audience,media) %>% #summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n=50)"
  },
  {
    "objectID": "chapters/gwwc_gg.html#plots",
    "href": "chapters/gwwc_gg.html#plots",
    "title": "3  Giving What We Can: Giving guides",
    "section": "3.5 PLOTS",
    "text": "3.5 PLOTS\n\n\nCode\n#Plot options in common\n\nlimits <- aes(ymax = mean_dv + (se_dv), ymin = mean_dv - (se_dv))\ndodge <- position_dodge(width = 0.9)\n\nvid_types <-\n  c(\"factual short\",\n    \"animal\",\n    \"climate\",\n    \"factual long\",\n    \"hypercube\",\n    \"poverty\")\n\ngg_gg_options <- list(geom_bar(stat = 'identity', position=dodge),\n  geom_errorbar(limits, position=dodge,  width=0.05),\n  jtools::theme_apa(),\n  theme(legend.position=\"none\"),\n  geom_text(aes(label = paste(\"$\",mean_dv %>% round(.,2)), y=5), position = position_dodge(.9), size=4, color=\"white\"),\n  theme(text=element_text(size=10))\n)\n\ngrpsumgg <- function(df, gvar, var) {\n  df %>%\n  group_by({{gvar}}) %>%\n  summarise(mean_dv = mean({{var}}, na.rm=TRUE),\n            se_dv = sd({{var}}, na.rm=TRUE)/sqrt(n())) \n}\n\n\n\n3.5.1 PLOT: Cost adjusted DV (results) by video\n\n\nCode\nprint(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(media) %>% summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50) %>% .kable(digits=2)\n\n\n# A tibble: 6 × 4\n  media         results      SE      n\n  <fct>           <dbl>   <dbl>  <int>\n1 factual short  0.117  0.00508 331197\n2 animal         0.0927 0.00505 180291\n3 climate        0.118  0.0156   38663\n4 factual long   0.0366 0.00576  30356\n5 hypercube      0.0619 0.00711  75785\n6 poverty        0.117  0.00922 113608\n\n\n\n \n  \n    media \n    results \n    SE \n    n \n  \n \n\n  \n    factual short \n    0.12 \n    0.01 \n    331,197 \n  \n  \n    animal \n    0.09 \n    0.01 \n    180,291 \n  \n  \n    climate \n    0.12 \n    0.02 \n    38,663 \n  \n  \n    factual long \n    0.04 \n    0.01 \n    30,356 \n  \n  \n    hypercube \n    0.06 \n    0.01 \n    75,785 \n  \n  \n    poverty \n    0.12 \n    0.01 \n    113,608 \n  \n\n\n\n\n\nCode\ngwwc_vid_results %>%\n  grpsumgg(media, DV_costadj) %>%\n  ggplot(aes(x=media, y=mean_dv)) +\n  gg_gg_options +\n  geom_bar(stat='identity',fill=\"#0072B2\", position=dodge) +\n  ylab('Results/$ spent') +\n  xlab('Video') +\n  ggtitle('Results/$ spent by Video') +\n  scale_y_continuous(limits = c(0,.2),  breaks=seq(0,.2, by=.05)) +\n  scale_x_discrete(labels=vid_types)\n\n\n\n\n\n\n\n3.5.2 PLOT: DV (Results) by video\n\n\nCode\nprint(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(media) %>% summarise(results=100*mean(DV),SE=100*std.error(DV),n=n()),n=50) %>% .kable(digits=2)\n\n\n# A tibble: 6 × 4\n  media         results      SE      n\n  <fct>           <dbl>   <dbl>  <int>\n1 factual short   0.223 0.00820 331197\n2 animal          0.250 0.0118  180291\n3 climate         0.186 0.0219   38663\n4 factual long    0.171 0.0237   30356\n5 hypercube       0.104 0.0117   75785\n6 poverty         0.165 0.0121  113608\n\n\n\n \n  \n    media \n    results \n    SE \n    n \n  \n \n\n  \n    factual short \n    0.22 \n    0.01 \n    331,197 \n  \n  \n    animal \n    0.25 \n    0.01 \n    180,291 \n  \n  \n    climate \n    0.19 \n    0.02 \n    38,663 \n  \n  \n    factual long \n    0.17 \n    0.02 \n    30,356 \n  \n  \n    hypercube \n    0.10 \n    0.01 \n    75,785 \n  \n  \n    poverty \n    0.17 \n    0.01 \n    113,608 \n  \n\n\n\n\n\nCode\ngwwc_vid_results %>%\n   grpsumgg(media, DV) %>%\n  ggplot(aes(x=media, y=mean_dv)) +\n  geom_bar(stat='identity', fill=\"#0072B2\",position=dodge) +\n  ylab('Results (%)')+\n  xlab('Video')+\n  ggtitle('Results by Video')+\n  scale_x_discrete(labels=vid_types)\n\n\n\n\n\n\n\n3.5.3 PLOT: Cost adjusted DV (results) by video and audience\nQuestions/Notes: Removed the retargeting audience\n\n\nCode\n#print(gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !=\"retargeting\") %>% group_by(media,audience) %>% #summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50) %>% .kable(digits=2)\n\n\ngwwc_vid_results %>% filter(ave.cost.impr>0 & audience !=\"retargeting\") %>%\n  group_by(media, audience) %>%\n  summarise(mean_dv = mean(DV_costadj, na.rm=TRUE),\n            se_dv = sd(DV_costadj, na.rm=TRUE)/sqrt(n())) %>%\n  ggplot(aes(x=audience, y=mean_dv, group=media, fill=media)) +\n  gg_gg_options +\n  labs(fill=\"Video\")+\n  scale_fill_brewer(palette=\"RdBu\")+\n  ylab('Results/$ spent')+\n  xlab('Audience')+\n  ggtitle('Results/$ spent by Video and Audience')+\n  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+\n  scale_y_continuous(limits = c(0,.25), oob = rescale_none, breaks=seq(0,.75, by=.25)) +\n  scale_x_discrete(labels=c(\"philanthropy\",\"animal\",\"climate\",\"general\",\"lookalike\",\"poverty\",\"retargeting\"))\n\n\n\n\n\nCode\nlevels(gwwc_vid_results$audience)\n\n\n[1] \"philanthropy\" \"animal\"       \"climate\"      \"general\"      \"lookalike\"   \n[6] \"poverty\"      \"retargeting\" \n\n\n\n\n3.5.4 PLOT: DV (results) by video and audience\nQuestions/Notes: Removed the retargeting audience\n\n\nCode\nprint(gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !=\"retargeting\") %>% group_by(media,audience) %>% summarise(results=100*mean(DV),SE=100*std.error(DV),n=n()),n=10) %>% .kable(digits=2)\n\n\n# A tibble: 29 × 5\n# Groups:   media [6]\n   media         audience     results     SE     n\n   <fct>         <fct>          <dbl>  <dbl> <int>\n 1 factual short philanthropy  0.228  0.0195 59660\n 2 factual short animal        0.203  0.0149 90832\n 3 factual short climate       0.205  0.0146 96005\n 4 factual short general       0.0964 0.0249 15559\n 5 factual short lookalike     0.389  0.0336 34207\n 6 factual short poverty       0.213  0.0247 34815\n 7 animal        philanthropy  0.213  0.0163 79525\n 8 animal        animal        0.280  0.0186 80642\n 9 animal        general       0.142  0.0367 10542\n10 animal        lookalike     0.424  0.0669  9441\n# … with 19 more rows\n\n\n\n \n  \n    media \n    audience \n    results \n    SE \n    n \n  \n \n\n  \n    factual short \n    philanthropy \n    0.23 \n    0.02 \n    59,660 \n  \n  \n    factual short \n    animal \n    0.20 \n    0.01 \n    90,832 \n  \n  \n    factual short \n    climate \n    0.21 \n    0.01 \n    96,005 \n  \n  \n    factual short \n    general \n    0.10 \n    0.02 \n    15,559 \n  \n  \n    factual short \n    lookalike \n    0.39 \n    0.03 \n    34,207 \n  \n  \n    factual short \n    poverty \n    0.21 \n    0.02 \n    34,815 \n  \n  \n    animal \n    philanthropy \n    0.21 \n    0.02 \n    79,525 \n  \n  \n    animal \n    animal \n    0.28 \n    0.02 \n    80,642 \n  \n  \n    animal \n    general \n    0.14 \n    0.04 \n    10,542 \n  \n  \n    animal \n    lookalike \n    0.42 \n    0.07 \n    9,441 \n  \n  \n    climate \n    philanthropy \n    0.28 \n    0.04 \n    13,810 \n  \n  \n    climate \n    climate \n    0.11 \n    0.03 \n    14,083 \n  \n  \n    climate \n    general \n    0.16 \n    0.05 \n    7,445 \n  \n  \n    climate \n    lookalike \n    0.21 \n    0.08 \n    3,283 \n  \n  \n    factual long \n    philanthropy \n    0.16 \n    0.05 \n    6,923 \n  \n  \n    factual long \n    animal \n    0.15 \n    0.04 \n    8,729 \n  \n  \n    factual long \n    climate \n    0.19 \n    0.04 \n    9,542 \n  \n  \n    factual long \n    lookalike \n    0.72 \n    0.36 \n    557 \n  \n  \n    factual long \n    poverty \n    0.11 \n    0.05 \n    4,595 \n  \n  \n    hypercube \n    philanthropy \n    0.14 \n    0.03 \n    17,400 \n  \n  \n    hypercube \n    animal \n    0.07 \n    0.03 \n    6,988 \n  \n  \n    hypercube \n    climate \n    0.09 \n    0.02 \n    20,154 \n  \n  \n    hypercube \n    general \n    0.09 \n    0.02 \n    22,132 \n  \n  \n    hypercube \n    lookalike \n    0.25 \n    0.14 \n    1,194 \n  \n  \n    hypercube \n    poverty \n    0.08 \n    0.03 \n    7,835 \n  \n  \n    poverty \n    philanthropy \n    0.15 \n    0.01 \n    71,466 \n  \n  \n    poverty \n    general \n    0.08 \n    0.08 \n    1,327 \n  \n  \n    poverty \n    lookalike \n    0.24 \n    0.04 \n    18,652 \n  \n  \n    poverty \n    poverty \n    0.15 \n    0.03 \n    22,129 \n  \n\n\n\n\n\nCode\ngwwc_vid_results %>% filter(ave.cost.impr>0 & audience !=\"retargeting\") %>%\n  group_by(media, audience) %>%\n  summarise(mean_dv = 100*mean(DV, na.rm=TRUE),\n            se_dv = 100*sd(DV, na.rm=TRUE)/sqrt(n())) %>%\n  ggplot(aes(x=audience, y=mean_dv, group=media, fill=media)) +\n  gg_gg_options +\n  labs(fill=\"Video\")+\n  scale_fill_brewer(palette=\"RdBu\")+\n  ylab('Results (%)')+\n  xlab('Audience')+\n  ggtitle('Results by Video and Audience')+\n  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+\n  scale_y_continuous(limits = c(0,1.1),  oob = rescale_none,  breaks=seq(0,1.1, by=.1)) +\n  scale_x_discrete(labels=c(\"philanthropy\",\"animal\",\"climate\",\"general\",\"lookalike\",\"poverty\",\"retargeting\"))\n\n\n\n\n\n\n\n3.5.5 PLOT: Cost adjusted DV (results) by audience\n\n\nCode\n#pirint(gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !=\"retargeting\") %>% group_by(audience) %>% summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50)\n\n\n\n\nCode\ngwwc_vid_results %>% filter(ave.cost.impr>0 & audience !=\"retargeting\") %>%\n  group_by(audience) %>%\nsummarise(mean_dv = mean(DV_costadj, na.rm=TRUE),\n            se_dv = sd(DV_costadj, na.rm=TRUE)/sqrt(n())) %>%\n  ggplot(aes(x=audience, y=mean_dv)) +\n  gg_gg_options +\n  ylab('Results/$ spent')+\n  xlab('Audience')+\n  ggtitle('Results/$ spent by Audience')+\n  scale_y_continuous(limits = c(0,.2),  breaks=seq(0,.2, by=.05)) +\n  scale_x_discrete(labels=c(\"philanthropy\",\"animal\"   ,\"climate\",\"general\",\"lookalike\",\"poverty\"))\n\n\n\n\n\n\n\n3.5.6 PLOT: DV (Results) by audience\n\n\nCode\n#print(gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !=\"retargeting\") %>% group_by(audience) %>% summarise(results=100*mean(DV),SE=100*std.error(DV),n=n()),n=50)\n\n\ngwwc_vid_results %>% filter(ave.cost.impr>0 & audience !=\"retargeting\") %>%\n  group_by(audience) %>%\n  summarise(mean_dv = 100*mean(DV, na.rm=TRUE),\n            se_dv = 100*sd(DV, na.rm=TRUE)/sqrt(n())) %>%\n  ggplot(aes(x=audience, y=mean_dv)) +\n  gg_gg_options +\n  ylab('Results (%)')+\n  xlab('Audience')+\n  ggtitle('Results by Audience')+\n  scale_y_continuous(limits = c(0,.4),  breaks=seq(0,.4, by=.05)) +\n  scale_x_discrete(labels=c(\"philanthropy\",\"animal\"   ,\"climate\",\"general\",\"lookalike\",\"poverty\"))\n\n\n\n\n\n\n\n3.5.7 PLOT: Cost adjusted DV (results) by age and gender\nDid not filter out the retargeting audience like i did for the other charts\n\n\nCode\ngwwc_vid_results$Gender <- as.factor(gwwc_vid_results$Gender)\nlevels(gwwc_vid_results$Gender)\n\n\n[1] \"female\"  \"male\"    \"unknown\"\n\n\nCode\nclass(gwwc_vid_results$Age)\n\n\n[1] \"factor\"\n\n\nCode\ngwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref=\"18-24\")\ngwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref=\"13-17\")\nlevels(gwwc_vid_results$Age)\n\n\n[1] \"13-17\" \"18-24\" \"25-34\" \"35-44\" \"45-54\" \"55-64\" \"65+\"  \n\n\nCode\n#print(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(Age,Gender) %>% summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50)\n\n\ngwwc_vid_results %>% filter(ave.cost.impr>0 & Age!=\"13-17\") %>%\n  group_by(Age, Gender) %>%\n  summarise(mean_dv = mean(DV_costadj, na.rm=TRUE),\n            se_dv = sd(DV_costadj, na.rm=TRUE)/sqrt(n())) %>%\n  ggplot(aes(x=Age, y=mean_dv, group=Gender, fill=Gender)) +\n  gg_gg_options +\n  labs(fill=\"Gender\")+\n  scale_fill_brewer(palette=\"Paired\")+\n  ylab('Results/$ spent')+\n  xlab('Age')+\n  ggtitle('Results/$ spent by Age and Gender')+\n  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+\n  scale_y_continuous(limits = c(0,.35),  breaks=seq(0,.35, by=.1)) +\n  scale_x_discrete(labels=c(\"18-24\",\"25-34\",\"35-44\",\"45-54\",\"55-64\",\"65+\" ))\n\n\n\n\n\n\n\n3.5.8 PLOT: DV (results) by age and gender\n\n\nCode\ngwwc_vid_results$Gender <- as.factor(gwwc_vid_results$Gender)\nlevels(gwwc_vid_results$Gender)\n\n\n[1] \"female\"  \"male\"    \"unknown\"\n\n\nCode\nclass(gwwc_vid_results$Age)\n\n\n[1] \"factor\"\n\n\nCode\ngwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref=\"18-24\")\ngwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref=\"13-17\")\nlevels(gwwc_vid_results$Age)\n\n\n[1] \"13-17\" \"18-24\" \"25-34\" \"35-44\" \"45-54\" \"55-64\" \"65+\"  \n\n\nCode\n#print(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(Age,Gender) %>% summarise(results=100*mean(DV),SE=std.error(100*DV),n=n()),n=50)\n\n\ngwwc_vid_results %>% filter(ave.cost.impr>0 & Age!=\"13-17\") %>%\n  group_by(Age, Gender) %>%\n  summarise(mean_dv = 100*mean(DV, na.rm=TRUE),\n            se_dv = 100*sd(DV, na.rm=TRUE)/sqrt(n())) %>%\n  ggplot(aes(x=Age, y=mean_dv, group=Gender, fill=Gender)) +\n  gg_gg_options +\n  labs(fill=\"Gender\")+\n  scale_fill_brewer(palette=\"Paired\")+\n  ylab('Results (%)')+\n  xlab('Age')+\n  ggtitle('Results by Age and Gender')+\n  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+\n  scale_y_continuous(limits = c(0,.75),  breaks=seq(0,.75, by=.25)) +\n  scale_x_discrete(labels=c(\"18-24\",\"25-34\",\"35-44\",\"45-54\",\"55-64\",\"65+\" ))\n\n\n\n\n\n\n\n3.5.9 PLOT: Cost adjusted DV (results) by Video and Age\n\n\nCode\nclass(gwwc_vid_results$Age)\n\n\n[1] \"factor\"\n\n\nCode\ngwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref=\"18-24\")\ngwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref=\"13-17\")\nlevels(gwwc_vid_results$Age)\n\n\n[1] \"13-17\" \"18-24\" \"25-34\" \"35-44\" \"45-54\" \"55-64\" \"65+\"  \n\n\nCode\n#print(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(Age,media) %>% summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50)\n\n\ngwwc_vid_results %>% filter(ave.cost.impr>0 & Age!=\"13-17\") %>%\n  group_by(media, Age) %>%\n  summarise(mean_dv = mean(DV_costadj, na.rm=TRUE),\n            se_dv = sd(DV_costadj, na.rm=TRUE)/sqrt(n())) %>%\n  ggplot(aes(x=Age, y=mean_dv, group=media, fill=media)) +\n  gg_gg_options +\n  labs(fill=\"Video\")+\n  scale_fill_brewer(palette=\"RdBu\")+\n  ylab('Results/$ spent')+\n  xlab('Age')+\n  ggtitle('Results/$ spent by Video and Age')+\n  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+\n  scale_y_continuous(limits = c(0,.2),  breaks=seq(0,.2, by=.05)) +\n  scale_x_discrete(labels=c(\"18-24\",\"25-34\",\"35-44\",\"45-54\",\"55-64\",\"65+\"))\n\n\n\n\n\n\n\n3.5.10 PLOT: DV (results) by video and age\n\n\nCode\nclass(gwwc_vid_results$Age)\n\n\n[1] \"factor\"\n\n\nCode\ngwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref=\"18-24\")\ngwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref=\"13-17\")\nlevels(gwwc_vid_results$Age)\n\n\n[1] \"13-17\" \"18-24\" \"25-34\" \"35-44\" \"45-54\" \"55-64\" \"65+\"  \n\n\nCode\nprint(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(Age,media) %>% summarise(results=100*mean(DV),SE=100*std.error(DV),n=n()),n=5) %>% .kable(digits=2)\n\n\n# A tibble: 39 × 5\n# Groups:   Age [7]\n  Age   media         results    SE     n\n  <fct> <fct>           <dbl> <dbl> <int>\n1 13-17 factual short       0     0   176\n2 13-17 animal              0     0   101\n3 13-17 climate             0     0    20\n4 13-17 factual long        0    NA     1\n5 13-17 hypercube           0     0    46\n# … with 34 more rows\n\n\n\n \n  \n    Age \n    media \n    results \n    SE \n    n \n  \n \n\n  \n    13-17 \n    factual short \n    0.00 \n    0.00 \n    176 \n  \n  \n    13-17 \n    animal \n    0.00 \n    0.00 \n    101 \n  \n  \n    13-17 \n    climate \n    0.00 \n    0.00 \n    20 \n  \n  \n    13-17 \n    factual long \n    0.00 \n    NA \n    1 \n  \n  \n    13-17 \n    hypercube \n    0.00 \n    0.00 \n    46 \n  \n  \n    13-17 \n    poverty \n    0.00 \n    0.00 \n    81 \n  \n  \n    18-24 \n    factual short \n    0.11 \n    0.01 \n    55,045 \n  \n  \n    18-24 \n    animal \n    0.12 \n    0.02 \n    35,453 \n  \n  \n    18-24 \n    climate \n    0.09 \n    0.03 \n    9,513 \n  \n  \n    18-24 \n    factual long \n    0.00 \n    0.00 \n    5,283 \n  \n  \n    18-24 \n    hypercube \n    0.12 \n    0.03 \n    18,632 \n  \n  \n    18-24 \n    poverty \n    0.14 \n    0.02 \n    23,823 \n  \n  \n    25-34 \n    factual short \n    0.15 \n    0.01 \n    124,020 \n  \n  \n    25-34 \n    animal \n    0.16 \n    0.02 \n    54,928 \n  \n  \n    25-34 \n    climate \n    0.17 \n    0.03 \n    17,904 \n  \n  \n    25-34 \n    factual long \n    0.08 \n    0.04 \n    5,161 \n  \n  \n    25-34 \n    hypercube \n    0.10 \n    0.02 \n    38,313 \n  \n  \n    25-34 \n    poverty \n    0.14 \n    0.02 \n    47,287 \n  \n  \n    35-44 \n    factual short \n    0.16 \n    0.02 \n    68,690 \n  \n  \n    35-44 \n    animal \n    0.23 \n    0.03 \n    34,263 \n  \n  \n    35-44 \n    climate \n    0.15 \n    0.05 \n    6,719 \n  \n  \n    35-44 \n    factual long \n    0.18 \n    0.07 \n    4,336 \n  \n  \n    35-44 \n    hypercube \n    0.09 \n    0.02 \n    18,794 \n  \n  \n    35-44 \n    poverty \n    0.20 \n    0.03 \n    25,492 \n  \n  \n    45-54 \n    factual short \n    0.26 \n    0.04 \n    17,482 \n  \n  \n    45-54 \n    animal \n    0.35 \n    0.04 \n    19,751 \n  \n  \n    45-54 \n    climate \n    0.24 \n    0.17 \n    851 \n  \n  \n    45-54 \n    factual long \n    0.15 \n    0.06 \n    4,548 \n  \n  \n    45-54 \n    poverty \n    0.30 \n    0.07 \n    6,090 \n  \n  \n    55-64 \n    factual short \n    0.35 \n    0.03 \n    28,557 \n  \n  \n    55-64 \n    animal \n    0.41 \n    0.04 \n    20,126 \n  \n  \n    55-64 \n    climate \n    0.33 \n    0.16 \n    1,221 \n  \n  \n    55-64 \n    factual long \n    0.17 \n    0.06 \n    4,848 \n  \n  \n    55-64 \n    poverty \n    0.20 \n    0.06 \n    6,150 \n  \n  \n    65+ \n    factual short \n    0.66 \n    0.04 \n    37,227 \n  \n  \n    65+ \n    animal \n    0.57 \n    0.06 \n    15,669 \n  \n  \n    65+ \n    climate \n    0.66 \n    0.16 \n    2,435 \n  \n  \n    65+ \n    factual long \n    0.40 \n    0.08 \n    6,179 \n  \n  \n    65+ \n    poverty \n    0.21 \n    0.07 \n    4,685 \n  \n\n\n\n\n\n\n\nCode\ngwwc_vid_results %>% filter(ave.cost.impr>0 & Age !=\"13-17\") %>%\n    group_by(media, Age) %>%\n  summarise(mean_dv = 100*mean(DV, na.rm=TRUE),\n            se_dv = 100*sd(DV, na.rm=TRUE)/sqrt(n())) %>%\n  ggplot(aes(x=Age, y=mean_dv, group=media, fill=media)) +\n  gg_gg_options +\n  labs(fill=\"Video\")+\n  scale_fill_brewer(palette=\"RdBu\")+\n  ylab('Results (%)')+\n  xlab('Age')+\n  ggtitle('Results by Video and Age')+\n  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+\n  scale_y_continuous(limits = c(0,.85),  breaks=seq(0,.85, by=.25)) +\n  scale_x_discrete(labels=c(\"18-24\",\"25-34\",\"35-44\",\"45-54\",\"55-64\",\"65+\"))"
  },
  {
    "objectID": "chapters/gwwc_gg.html#statistics-and-mi-needs-to-be-made-into-table",
    "href": "chapters/gwwc_gg.html#statistics-and-mi-needs-to-be-made-into-table",
    "title": "3  Giving What We Can: Giving guides",
    "section": "3.6 Statistics and mi– needs to be made into table",
    "text": "3.6 Statistics and mi– needs to be made into table\n\n3.6.1 Regressions with interactions\n\n\nCode\nsummary(lm(data = gwwc_vid_results, DV~Gender*Age+ave.cost.impr))\n\n\n\nCall:\nlm(formula = DV ~ Gender * Age + ave.cost.impr, data = gwwc_vid_results)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.04779 -0.00203 -0.00151 -0.00129  0.99914 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            -9.180e-04  3.006e-03  -0.305    0.760    \nGendermale              1.965e-04  4.810e-03   0.041    0.967    \nGenderunknown           4.097e-04  6.120e-03   0.067    0.947    \nAge18-24                1.497e-03  3.007e-03   0.498    0.619    \nAge25-34                1.799e-03  3.005e-03   0.599    0.549    \nAge35-44                1.874e-03  3.006e-03   0.623    0.533    \nAge45-54                2.607e-03  3.012e-03   0.865    0.387    \nAge55-64                2.712e-03  3.012e-03   0.900    0.368    \nAge65+                  4.702e-03  3.019e-03   1.557    0.119    \nave.cost.impr           4.306e-02  6.608e-03   6.516 7.25e-11 ***\nGendermale:Age18-24    -6.997e-05  4.817e-03  -0.015    0.988    \nGenderunknown:Age18-24 -4.670e-04  6.156e-03  -0.076    0.940    \nGendermale:Age25-34    -4.299e-04  4.814e-03  -0.089    0.929    \nGenderunknown:Age25-34 -7.873e-04  6.151e-03  -0.128    0.898    \nGendermale:Age35-44    -6.757e-06  4.818e-03  -0.001    0.999    \nGenderunknown:Age35-44 -8.994e-04  6.166e-03  -0.146    0.884    \nGendermale:Age45-54    -1.671e-03  4.845e-03  -0.345    0.730    \nGenderunknown:Age45-54  2.184e-03  6.270e-03   0.348    0.728    \nGendermale:Age55-64    -7.455e-04  4.836e-03  -0.154    0.877    \nGenderunknown:Age55-64  2.492e-04  6.247e-03   0.040    0.968    \nGendermale:Age65+      -1.479e-03  4.831e-03  -0.306    0.760    \nGenderunknown:Age65+   -9.135e-04  6.224e-03  -0.147    0.883    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.04524 on 770091 degrees of freedom\nMultiple R-squared:  0.0009605, Adjusted R-squared:  0.0009332 \nF-statistic: 35.25 on 21 and 770091 DF,  p-value: < 2.2e-16\n\n\nCode\nsummary(lm(data = gwwc_vid_results,DV~Gender*Age))\n\n\n\nCall:\nlm(formula = DV ~ Gender * Age, data = gwwc_vid_results)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.00629 -0.00180 -0.00150 -0.00120  0.99895 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)  \n(Intercept)             3.049e-14  3.003e-03   0.000   1.0000  \nGendermale             -2.692e-14  4.810e-03   0.000   1.0000  \nGenderunknown           3.038e-14  6.119e-03   0.000   1.0000  \nAge18-24                1.132e-03  3.006e-03   0.376   0.7066  \nAge25-34                1.502e-03  3.004e-03   0.500   0.6172  \nAge35-44                1.706e-03  3.006e-03   0.568   0.5703  \nAge45-54                3.089e-03  3.011e-03   1.026   0.3050  \nAge55-64                3.507e-03  3.010e-03   1.165   0.2439  \nAge65+                  6.293e-03  3.010e-03   2.091   0.0365 *\nGendermale:Age18-24     6.977e-05  4.817e-03   0.014   0.9884  \nGenderunknown:Age18-24 -7.811e-05  6.156e-03  -0.013   0.9899  \nGendermale:Age25-34    -3.072e-04  4.814e-03  -0.064   0.9491  \nGenderunknown:Age25-34 -4.034e-04  6.151e-03  -0.066   0.9477  \nGendermale:Age35-44     9.669e-05  4.818e-03   0.020   0.9840  \nGenderunknown:Age35-44 -6.279e-04  6.166e-03  -0.102   0.9189  \nGendermale:Age45-54    -1.687e-03  4.845e-03  -0.348   0.7277  \nGenderunknown:Age45-54  2.235e-03  6.270e-03   0.356   0.7215  \nGendermale:Age55-64    -9.220e-04  4.836e-03  -0.191   0.8488  \nGenderunknown:Age55-64  2.439e-04  6.247e-03   0.039   0.9689  \nGendermale:Age65+      -2.110e-03  4.830e-03  -0.437   0.6623  \nGenderunknown:Age65+   -1.408e-03  6.224e-03  -0.226   0.8210  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.04524 on 770092 degrees of freedom\nMultiple R-squared:  0.0009054, Adjusted R-squared:  0.0008794 \nF-statistic: 34.89 on 20 and 770092 DF,  p-value: < 2.2e-16\n\n\n\n\n3.6.2 Regressions with no interactions\njust demographics, not control\n\n\nCode\nsummary(data = lm(gwwc_vid_results,DV~Gender+Age))\n\n\nError in as.data.frame.default(data): cannot coerce class '\"formula\"' to a data.frame\n\n\njust demographic, controlling for cost\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nmeans and standard errors for age groups/gender\n\n\nCode\nprint(gwwc_vid_results %>% group_by(Gender,Age) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n=50)\n\n\n# A tibble: 21 × 7\n# Groups:   Gender [3]\n   Gender  Age   results      SE      n   cost      CPR\n   <fct>   <fct>   <dbl>   <dbl>  <int>  <dbl>    <dbl>\n 1 female  13-17   0     0          227 0.0213 Inf     \n 2 female  18-24   0.113 0.0107   98953 0.0129   0.114 \n 3 female  25-34   0.150 0.00843 211071 0.0144   0.0960\n 4 female  35-44   0.171 0.0118  121915 0.0174   0.102 \n 5 female  45-54   0.309 0.0276   40467 0.0325   0.105 \n 6 female  55-64   0.351 0.0265   49900 0.0398   0.113 \n 7 female  65+     0.629 0.0350   51172 0.0583   0.0926\n 8 male    13-17   0     0          145 0.0168 Inf     \n 9 male    18-24   0.120 0.0165   44107 0.0115   0.0960\n10 male    25-34   0.119 0.0130   71149 0.0127   0.106 \n11 male    35-44   0.180 0.0234   32727 0.0153   0.0847\n12 male    45-54   0.140 0.0443    7134 0.0276   0.197 \n13 male    55-64   0.259 0.0516    9671 0.0311   0.120 \n14 male    65+     0.418 0.0558   13388 0.0390   0.0933\n15 unknown 13-17   0     0           72 0.0118 Inf     \n16 unknown 18-24   0.105 0.0471    4745 0.0124   0.117 \n17 unknown 25-34   0.110 0.0448    5462 0.0138   0.126 \n18 unknown 35-44   0.108 0.0539    3710 0.0142   0.132 \n19 unknown 45-54   0.532 0.217     1127 0.0242   0.0454\n20 unknown 55-64   0.375 0.167     1333 0.0302   0.0804\n21 unknown 65+     0.488 0.172     1638 0.0372   0.0763\n\n\n\n\nCode\nhist(gwwc_vid_results$DV_costadj[gwwc_vid_results$DV_costadj>0])\n\n\n\n\n\nCode\nhist(gwwc_vid_results$DV_costadj[gwwc_vid_results$DV_costadj>=0])\n\n\n\n\n\n\n\n3.6.3 DEMOGRAPHICS WITH CONTROLS FOR VIDEO AND COST\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\nsummary(lm(gwwc_vid_results, DV_costadj~Gender+Age))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\n\n3.6.3.1 AUDIENCES\nmain effects\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nNEW DV\n\n\nCode\nsummary(lm(gwwc_vid_results,DV_costadj~Gender+Age+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #interactions\n  summary(lm(gwwc_vid_results,DV~Gender*audience+ave.cost.impr+Age))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n## NEW DV\n    summary(lm(gwwc_vid_results,DV_costadj~Gender*audience+Age))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  summary(lm(gwwc_vid_results,DV~Age*audience+ave.cost.impr+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #means for audience\n  print(gwwc_vid_results %>% group_by(audience) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n=50)\n\n\n# A tibble: 7 × 6\n  audience     results      SE      n   cost    CPR\n  <fct>          <dbl>   <dbl>  <int>  <dbl>  <dbl>\n1 philanthropy   0.195 0.00885 248852 0.0220 0.112 \n2 animal         0.229 0.0110  187212 0.0222 0.0973\n3 climate        0.178 0.0113  139824 0.0181 0.102 \n4 general        0.112 0.0140   57012 0.0130 0.116 \n5 lookalike      0.344 0.0226   67359 0.0266 0.0773\n6 poverty        0.171 0.0157   69404 0.0182 0.106 \n7 retargeting    0.667 0.384      450 0.0250 0.0376\n\n\n\n\n3.6.3.2 MESSAGES\nno controls\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~message))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #control for cost only\n  summary(lm(gwwc_vid_results,DV~message+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #check results with campaign\n  summary(lm(gwwc_vid_results,DV~Campaign.name))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #check results with campaign and cost control\n  summary(lm(gwwc_vid_results,DV~Campaign.name+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nwith controls\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr+audience+message))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #interactions\n  #with audience\n  summary(lm(gwwc_vid_results,DV~message*audience+ave.cost.impr+Age+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #with Gender\n  summary(lm(gwwc_vid_results,DV~message*Gender+ave.cost.impr+Age+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #with Age (emotional much worse with ages 65+)\n  summary(lm(gwwc_vid_results,DV~message*Age+ave.cost.impr+Age+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\ninteraction with age and campaign restriction\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~message*agetrin+message*restriction18_39+ave.cost.impr+Age+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~message*agetrin+message*restriction18_39+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nin just early campaigns\n\n\nCode\nsummary(lm(subset(data,restriction18_39==0),DV~message*agetrin+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'restriction18_39' not found\n\n\n\n\n\n3.6.4 MEDIA\nno controls\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nmeans and SEs\n\n\nCode\ngwwc_vid_results %>% group_by(media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results)\n\n\n# A tibble: 6 × 6\n  media         results      SE      n   cost    CPR\n  <fct>           <dbl>   <dbl>  <int>  <dbl>  <dbl>\n1 factual short   0.223 0.00820 331287 0.0186 0.0834\n2 animal          0.250 0.0118  180327 0.0274 0.110 \n3 climate         0.186 0.0219   38703 0.0160 0.0862\n4 factual long    0.171 0.0237   30359 0.0378 0.221 \n5 hypercube       0.104 0.0117   75790 0.0176 0.169 \n6 poverty         0.165 0.0121  113647 0.0155 0.0939\n\n\ncontrol for cost only\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame"
  },
  {
    "objectID": "chapters/gwwc_gg.html#new-dv",
    "href": "chapters/gwwc_gg.html#new-dv",
    "title": "3  Giving What We Can: Giving guides",
    "section": "3.7 NEW DV",
    "text": "3.7 NEW DV\n\n\nCode\nsummary(lm(gwwc_vid_results,DV_costadj~media))####THIS IS GOOD?\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nwith controls\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr+audience+media))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\n\n3.7.1 NEW DV\n\n\nCode\nsummary(lm(gwwc_vid_results,DV_costadj~Gender+Age+audience+media))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\ninteractions\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media*Age+media*Gender+media*audience+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\nsummary(lm(gwwc_vid_results,DV_costadj~media*Age+media*Gender+media*audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media*Age+media*Gender+media*audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\nsummary(lm(gwwc_vid_results,DV_costadj~Age+Gender+media*audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nwith audience\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media*audience+ave.cost.impr+Age+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nmeans and SEs\n\n\nCode\nprint(gwwc_vid_results %>% group_by(audience,media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n=50)\n\n\n# A tibble: 35 × 7\n# Groups:   audience [7]\n   audience     media         results     SE     n    cost      CPR\n   <fct>        <fct>           <dbl>  <dbl> <int>   <dbl>    <dbl>\n 1 philanthropy factual short  0.228  0.0195 59677 0.0212    0.0932\n 2 philanthropy animal         0.212  0.0163 79537 0.0288    0.135 \n 3 philanthropy climate        0.275  0.0445 13825 0.0194    0.0707\n 4 philanthropy factual long   0.159  0.0479  6923 0.0442    0.278 \n 5 philanthropy hypercube      0.144  0.0287 17401 0.0165    0.115 \n 6 philanthropy poverty        0.150  0.0145 71489 0.0146    0.0977\n 7 animal       factual short  0.203  0.0149 90843 0.0178    0.0878\n 8 animal       animal         0.280  0.0186 80651 0.0265    0.0945\n 9 animal       factual long   0.149  0.0413  8730 0.0332    0.223 \n10 animal       hypercube      0.0716 0.0320  6988 0.0177    0.247 \n11 climate      factual short  0.205  0.0146 96025 0.0167    0.0816\n12 climate      climate        0.106  0.0275 14100 0.0136    0.128 \n13 climate      factual long   0.189  0.0444  9542 0.0362    0.192 \n14 climate      hypercube      0.0943 0.0216 20157 0.0195    0.207 \n15 general      factual short  0.0964 0.0249 15563 0.00962   0.0999\n16 general      animal         0.142  0.0367 10542 0.0135    0.0948\n17 general      climate        0.161  0.0465  7448 0.0101    0.0627\n18 general      hypercube      0.0949 0.0207 22132 0.0162    0.171 \n19 general      poverty        0.0754 0.0754  1327 0.0112    0.148 \n20 lookalike    factual short  0.389  0.0336 34218 0.0255    0.0656\n21 lookalike    animal         0.423  0.0668  9447 0.0399    0.0942\n22 lookalike    climate        0.213  0.0804  3287 0.0257    0.121 \n23 lookalike    factual long   0.718  0.358    557 0.0782    0.109 \n24 lookalike    hypercube      0.251  0.145   1194 0.0250    0.0994\n25 lookalike    poverty        0.241  0.0359 18656 0.0207    0.0858\n26 poverty      factual short  0.212  0.0247 34837 0.0185    0.0873\n27 poverty      factual long   0.109  0.0486  4595 0.0350    0.322 \n28 poverty      hypercube      0.0766 0.0312  7836 0.0180    0.235 \n29 poverty      poverty        0.154  0.0263 22136 0.0144    0.0936\n30 retargeting  factual short  0      0        124 0.0254  Inf     \n31 retargeting  animal         0.667  0.667    150 0.0304    0.0456\n32 retargeting  climate        0      0         43 0.0200  Inf     \n33 retargeting  factual long   8.33   8.33      12 0.0933    0.0112\n34 retargeting  hypercube      0      0         82 0.0132  Inf     \n35 retargeting  poverty        2.56   2.56      39 0.0128    0.005 \n\n\nCode\nprint(gwwc_vid_results %>% filter(gwwc_vid_results$ave.cost.impr>0) %>% group_by(audience,media) %>% summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50)\n\n\n# A tibble: 35 × 5\n# Groups:   audience [7]\n   audience     media         results      SE     n\n   <fct>        <fct>           <dbl>   <dbl> <int>\n 1 philanthropy factual short  0.104  0.0110  59660\n 2 philanthropy animal         0.0703 0.00624 79525\n 3 philanthropy climate        0.132  0.0245  13810\n 4 philanthropy factual long   0.0338 0.0109   6923\n 5 philanthropy hypercube      0.0955 0.0194  17400\n 6 philanthropy poverty        0.118  0.0121  71466\n 7 animal       factual short  0.122  0.0102  90832\n 8 animal       animal         0.112  0.00844 80642\n 9 animal       factual long   0.0350 0.0107   8729\n10 animal       hypercube      0.0381 0.0173   6988\n11 climate      factual short  0.117  0.00970 96005\n12 climate      climate        0.0904 0.0250  14083\n13 climate      factual long   0.0447 0.0121   9542\n14 climate      hypercube      0.0475 0.0109  20154\n15 general      factual short  0.102  0.0269  15559\n16 general      animal         0.105  0.0275  10542\n17 general      climate        0.156  0.0451   7445\n18 general      hypercube      0.0618 0.0136  22132\n19 general      poverty        0.0653 0.0653   1327\n20 lookalike    factual short  0.140  0.0136  34207\n21 lookalike    animal         0.106  0.0202   9441\n22 lookalike    climate        0.0885 0.0366   3283\n23 lookalike    factual long   0.0965 0.0588    557\n24 lookalike    hypercube      0.0907 0.0524   1194\n25 lookalike    poverty        0.117  0.0187  18652\n26 poverty      factual short  0.112  0.0153  34815\n27 poverty      factual long   0.0194 0.00880  4595\n28 poverty      hypercube      0.0423 0.0177   7835\n29 poverty      poverty        0.118  0.0209  22129\n30 retargeting  factual short  0      0         119\n31 retargeting  animal         0.0464 0.0464    141\n32 retargeting  climate        0      0          42\n33 retargeting  factual long   0.326  0.326      10\n34 retargeting  hypercube      0      0          82\n35 retargeting  poverty        0.490  0.490      34\n\n\nNEW DV with audience\n\n\nCode\nsummary(lm(gwwc_vid_results,DV_costadj~media*audience+Age+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nmeans and SEs\n\n\nCode\nprint(gwwc_vid_results %>% group_by(audience,media) %>% summarise(results=mean(DV_costadj)*100,SE=std.error(DV_costadj)*100,n=n()),n=50)\n\n\n# A tibble: 35 × 5\n# Groups:   audience [7]\n   audience     media         results     SE     n\n   <fct>        <fct>           <dbl>  <dbl> <int>\n 1 philanthropy factual short  NaN     1.10  59677\n 2 philanthropy animal         NaN     0.624 79537\n 3 philanthropy climate        NaN     2.45  13825\n 4 philanthropy factual long     3.38  1.09   6923\n 5 philanthropy hypercube      NaN     1.94  17401\n 6 philanthropy poverty        NaN     1.21  71489\n 7 animal       factual short  NaN     1.02  90843\n 8 animal       animal         NaN     0.844 80651\n 9 animal       factual long   NaN     1.07   8730\n10 animal       hypercube        3.81  1.73   6988\n11 climate      factual short  NaN     0.970 96025\n12 climate      climate        NaN     2.50  14100\n13 climate      factual long     4.47  1.21   9542\n14 climate      hypercube      NaN     1.09  20157\n15 general      factual short  NaN     2.69  15563\n16 general      animal          10.5   2.75  10542\n17 general      climate        NaN     4.51   7448\n18 general      hypercube        6.18  1.36  22132\n19 general      poverty          6.53  6.53   1327\n20 lookalike    factual short  NaN     1.36  34218\n21 lookalike    animal         NaN     2.02   9447\n22 lookalike    climate        NaN     3.66   3287\n23 lookalike    factual long     9.65  5.88    557\n24 lookalike    hypercube        9.07  5.24   1194\n25 lookalike    poverty        NaN     1.87  18656\n26 poverty      factual short  NaN     1.53  34837\n27 poverty      factual long     1.94  0.880  4595\n28 poverty      hypercube      NaN     1.77   7836\n29 poverty      poverty        NaN     2.09  22136\n30 retargeting  factual short  NaN     0       124\n31 retargeting  animal         NaN     4.64    150\n32 retargeting  climate        NaN     0        43\n33 retargeting  factual long   NaN    32.6      12\n34 retargeting  hypercube        0     0        82\n35 retargeting  poverty        NaN    49.0      39\n\n\nwith Gender\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media*Gender+ave.cost.impr+Age+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nmeans and SEs gwwc_vid_results %>% group_by(Gender,media) %>% summarise(results=mean(DV)100,SE=std.error(DV)100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results)\nwith Age (emotional much worse with ages 65+) summary(lm(gwwc_vid_results,DV~media*Age+ave.cost.impr+Age+audience))\nmeans and SEs print(gwwc_vid_results %>% group_by(Age,media) %>% summarise(results=mean(DV)100,SE=std.error(DV)100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n = 50) print(gwwc_vid_results %>% group_by(audience,Age,media) %>% summarise(results=mean(DV)100,SE=std.error(DV)100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n = 500)\ninteraction with age and campaign restriction - old people really hated factual long\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media*agetrin+media*restriction18_39+ave.cost.impr+Age+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media*agetrin+media*restriction18_39+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nin just early campaigns\n\n\nCode\nsummary(subset(gwwc_vid_results,restriction18_39==0),DV~media*agetrin+ave.cost.impr))\n\n\nError: <text>:1:85: unexpected ')'\n1: summary(subset(gwwc_vid_results,restriction18_39==0),DV~media*agetrin+ave.cost.impr))\n                                                                                        ^\n\n\nmeans and SEs\n\n\nCode\ngwwc_vid_results %>% filter(restriction18_39==0) %>% group_by(Age,media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results)\n\n\n# A tibble: 34 × 7\n# Groups:   Age [7]\n   Age   media         results     SE     n   cost      CPR\n   <fct> <fct>           <dbl>  <dbl> <int>  <dbl>    <dbl>\n 1 13-17 factual short   0     0         15 0.0193 Inf     \n 2 13-17 animal          0     0         23 0.0170 Inf     \n 3 13-17 factual long    0     0          2 0.005  Inf     \n 4 13-17 poverty         0     0         12 0.0167 Inf     \n 5 18-24 factual short   0.114 0.0378  7928 0.0149   0.131 \n 6 18-24 animal          0.147 0.0322 14242 0.0178   0.121 \n 7 18-24 climate         0.169 0.169    592 0.0138   0.0817\n 8 18-24 factual long    0     0       5283 0.0156 Inf     \n 9 18-24 poverty         0.161 0.0658  3720 0.0170   0.105 \n10 25-34 factual short   0.194 0.0343 16480 0.0173   0.089 \n# … with 24 more rows"
  },
  {
    "objectID": "chapters/gwwc_gg.html#statistics-and-models-needs-to-be-made-into-tables",
    "href": "chapters/gwwc_gg.html#statistics-and-models-needs-to-be-made-into-tables",
    "title": "3  Giving What We Can: Giving guides",
    "section": "3.6 Statistics and models – needs to be made into tables",
    "text": "3.6 Statistics and models – needs to be made into tables\n\n3.6.1 Regressions with interactions\n\n\nCode\nsummary(lm(data = gwwc_vid_results, DV~Gender*Age+ave.cost.impr))\n\n\n\nCall:\nlm(formula = DV ~ Gender * Age + ave.cost.impr, data = gwwc_vid_results)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.04779 -0.00203 -0.00151 -0.00129  0.99914 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            -9.180e-04  3.006e-03  -0.305    0.760    \nGendermale              1.965e-04  4.810e-03   0.041    0.967    \nGenderunknown           4.097e-04  6.120e-03   0.067    0.947    \nAge18-24                1.497e-03  3.007e-03   0.498    0.619    \nAge25-34                1.799e-03  3.005e-03   0.599    0.549    \nAge35-44                1.874e-03  3.006e-03   0.623    0.533    \nAge45-54                2.607e-03  3.012e-03   0.865    0.387    \nAge55-64                2.712e-03  3.012e-03   0.900    0.368    \nAge65+                  4.702e-03  3.019e-03   1.557    0.119    \nave.cost.impr           4.306e-02  6.608e-03   6.516 7.25e-11 ***\nGendermale:Age18-24    -6.997e-05  4.817e-03  -0.015    0.988    \nGenderunknown:Age18-24 -4.670e-04  6.156e-03  -0.076    0.940    \nGendermale:Age25-34    -4.299e-04  4.814e-03  -0.089    0.929    \nGenderunknown:Age25-34 -7.873e-04  6.151e-03  -0.128    0.898    \nGendermale:Age35-44    -6.757e-06  4.818e-03  -0.001    0.999    \nGenderunknown:Age35-44 -8.994e-04  6.166e-03  -0.146    0.884    \nGendermale:Age45-54    -1.671e-03  4.845e-03  -0.345    0.730    \nGenderunknown:Age45-54  2.184e-03  6.270e-03   0.348    0.728    \nGendermale:Age55-64    -7.455e-04  4.836e-03  -0.154    0.877    \nGenderunknown:Age55-64  2.492e-04  6.247e-03   0.040    0.968    \nGendermale:Age65+      -1.479e-03  4.831e-03  -0.306    0.760    \nGenderunknown:Age65+   -9.135e-04  6.224e-03  -0.147    0.883    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.04524 on 770091 degrees of freedom\nMultiple R-squared:  0.0009605, Adjusted R-squared:  0.0009332 \nF-statistic: 35.25 on 21 and 770091 DF,  p-value: < 2.2e-16\n\n\nCode\nsummary(lm(data = gwwc_vid_results,DV~Gender*Age))\n\n\n\nCall:\nlm(formula = DV ~ Gender * Age, data = gwwc_vid_results)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-0.00629 -0.00180 -0.00150 -0.00120  0.99895 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)  \n(Intercept)             3.049e-14  3.003e-03   0.000   1.0000  \nGendermale             -2.692e-14  4.810e-03   0.000   1.0000  \nGenderunknown           3.038e-14  6.119e-03   0.000   1.0000  \nAge18-24                1.132e-03  3.006e-03   0.376   0.7066  \nAge25-34                1.502e-03  3.004e-03   0.500   0.6172  \nAge35-44                1.706e-03  3.006e-03   0.568   0.5703  \nAge45-54                3.089e-03  3.011e-03   1.026   0.3050  \nAge55-64                3.507e-03  3.010e-03   1.165   0.2439  \nAge65+                  6.293e-03  3.010e-03   2.091   0.0365 *\nGendermale:Age18-24     6.977e-05  4.817e-03   0.014   0.9884  \nGenderunknown:Age18-24 -7.811e-05  6.156e-03  -0.013   0.9899  \nGendermale:Age25-34    -3.072e-04  4.814e-03  -0.064   0.9491  \nGenderunknown:Age25-34 -4.034e-04  6.151e-03  -0.066   0.9477  \nGendermale:Age35-44     9.669e-05  4.818e-03   0.020   0.9840  \nGenderunknown:Age35-44 -6.279e-04  6.166e-03  -0.102   0.9189  \nGendermale:Age45-54    -1.687e-03  4.845e-03  -0.348   0.7277  \nGenderunknown:Age45-54  2.235e-03  6.270e-03   0.356   0.7215  \nGendermale:Age55-64    -9.220e-04  4.836e-03  -0.191   0.8488  \nGenderunknown:Age55-64  2.439e-04  6.247e-03   0.039   0.9689  \nGendermale:Age65+      -2.110e-03  4.830e-03  -0.437   0.6623  \nGenderunknown:Age65+   -1.408e-03  6.224e-03  -0.226   0.8210  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.04524 on 770092 degrees of freedom\nMultiple R-squared:  0.0009054, Adjusted R-squared:  0.0008794 \nF-statistic: 34.89 on 20 and 770092 DF,  p-value: < 2.2e-16\n\n\n\n\n3.6.2 Regressions with no interactions\njust demographics, not control\n\n\nCode\nsummary(data = lm(gwwc_vid_results,DV~Gender+Age))\n\n\nError in as.data.frame.default(data): cannot coerce class '\"formula\"' to a data.frame\n\n\njust demographic, controlling for cost\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nmeans and standard errors for age groups/gender\n\n\nCode\nprint(gwwc_vid_results %>% group_by(Gender,Age) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n=50)\n\n\n# A tibble: 21 × 7\n# Groups:   Gender [3]\n   Gender  Age   results      SE      n   cost      CPR\n   <fct>   <fct>   <dbl>   <dbl>  <int>  <dbl>    <dbl>\n 1 female  13-17   0     0          227 0.0213 Inf     \n 2 female  18-24   0.113 0.0107   98953 0.0129   0.114 \n 3 female  25-34   0.150 0.00843 211071 0.0144   0.0960\n 4 female  35-44   0.171 0.0118  121915 0.0174   0.102 \n 5 female  45-54   0.309 0.0276   40467 0.0325   0.105 \n 6 female  55-64   0.351 0.0265   49900 0.0398   0.113 \n 7 female  65+     0.629 0.0350   51172 0.0583   0.0926\n 8 male    13-17   0     0          145 0.0168 Inf     \n 9 male    18-24   0.120 0.0165   44107 0.0115   0.0960\n10 male    25-34   0.119 0.0130   71149 0.0127   0.106 \n11 male    35-44   0.180 0.0234   32727 0.0153   0.0847\n12 male    45-54   0.140 0.0443    7134 0.0276   0.197 \n13 male    55-64   0.259 0.0516    9671 0.0311   0.120 \n14 male    65+     0.418 0.0558   13388 0.0390   0.0933\n15 unknown 13-17   0     0           72 0.0118 Inf     \n16 unknown 18-24   0.105 0.0471    4745 0.0124   0.117 \n17 unknown 25-34   0.110 0.0448    5462 0.0138   0.126 \n18 unknown 35-44   0.108 0.0539    3710 0.0142   0.132 \n19 unknown 45-54   0.532 0.217     1127 0.0242   0.0454\n20 unknown 55-64   0.375 0.167     1333 0.0302   0.0804\n21 unknown 65+     0.488 0.172     1638 0.0372   0.0763\n\n\n\n\nCode\nhist(gwwc_vid_results$DV_costadj[gwwc_vid_results$DV_costadj>0])\n\n\n\n\n\nCode\nhist(gwwc_vid_results$DV_costadj[gwwc_vid_results$DV_costadj>=0])\n\n\n\n\n\n\n\n3.6.3 DEMOGRAPHICS WITH CONTROLS FOR VIDEO AND COST\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\nsummary(lm(gwwc_vid_results, DV_costadj~Gender+Age))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\n\n3.6.3.1 AUDIENCES\nmain effects\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nNEW DV\n\n\nCode\nsummary(lm(gwwc_vid_results,DV_costadj~Gender+Age+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #interactions\n  summary(lm(gwwc_vid_results,DV~Gender*audience+ave.cost.impr+Age))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n## NEW DV\n    summary(lm(gwwc_vid_results,DV_costadj~Gender*audience+Age))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  summary(lm(gwwc_vid_results,DV~Age*audience+ave.cost.impr+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #means for audience\n  print(gwwc_vid_results %>% group_by(audience) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n=50)\n\n\n# A tibble: 7 × 6\n  audience     results      SE      n   cost    CPR\n  <fct>          <dbl>   <dbl>  <int>  <dbl>  <dbl>\n1 philanthropy   0.195 0.00885 248852 0.0220 0.112 \n2 animal         0.229 0.0110  187212 0.0222 0.0973\n3 climate        0.178 0.0113  139824 0.0181 0.102 \n4 general        0.112 0.0140   57012 0.0130 0.116 \n5 lookalike      0.344 0.0226   67359 0.0266 0.0773\n6 poverty        0.171 0.0157   69404 0.0182 0.106 \n7 retargeting    0.667 0.384      450 0.0250 0.0376\n\n\n\n\n3.6.3.2 MESSAGES\nno controls\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~message))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #control for cost only\n  summary(lm(gwwc_vid_results,DV~message+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #check results with campaign\n  summary(lm(gwwc_vid_results,DV~Campaign.name))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #check results with campaign and cost control\n  summary(lm(gwwc_vid_results,DV~Campaign.name+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nwith controls\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr+audience+message))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #interactions\n  #with audience\n  summary(lm(gwwc_vid_results,DV~message*audience+ave.cost.impr+Age+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #with Gender\n  summary(lm(gwwc_vid_results,DV~message*Gender+ave.cost.impr+Age+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\n  #with Age (emotional much worse with ages 65+)\n  summary(lm(gwwc_vid_results,DV~message*Age+ave.cost.impr+Age+audience))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\ninteraction with age and campaign restriction\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~message*agetrin+message*restriction18_39+ave.cost.impr+Age+Gender))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~message*agetrin+message*restriction18_39+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nin just early campaigns\n\n\nCode\nsummary(lm(subset(data,restriction18_39==0),DV~message*agetrin+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': object 'restriction18_39' not found\n\n\n\n\n\n3.6.4 MEDIA\nno controls\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame\n\n\nmeans and SEs\n\n\nCode\ngwwc_vid_results %>% group_by(media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results)\n\n\n# A tibble: 6 × 6\n  media         results      SE      n   cost    CPR\n  <fct>           <dbl>   <dbl>  <int>  <dbl>  <dbl>\n1 factual short   0.223 0.00820 331287 0.0186 0.0834\n2 animal          0.250 0.0118  180327 0.0274 0.110 \n3 climate         0.186 0.0219   38703 0.0160 0.0862\n4 factual long    0.171 0.0237   30359 0.0378 0.221 \n5 hypercube       0.104 0.0117   75790 0.0176 0.169 \n6 poverty         0.165 0.0121  113647 0.0155 0.0939\n\n\ncontrol for cost only\n\n\nCode\nsummary(lm(gwwc_vid_results,DV~media+ave.cost.impr))\n\n\nError in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'summary': cannot coerce class '\"formula\"' to a data.frame"
  }
]