---
execute:
    freeze: auto # re-render only when source changes
    warning: false
    message: false
    error: true
---

# Giving What We Can: Giving guides {#gwwc_gg}

## The trial

> "**Effective Giving Guide Lead Generation campaign** ... ran late November 2021 - January 2022. The objective of this campaign was to see whether a factual or cause-led approach was more cost effective at getting people to fill out a form and give us their email in order to download our Effective Giving Guide."

**There were two dimensions of treatment content:**

1.  **The texts displayed above the videos**

::: {.callout-note collapse="true"}
## Texts

**Bigger difference next year:** Want to make a bigger difference next year? Start with our Effective Giving Guide and learn how to make a remarkable impact just by carefully choosing the charities you give to.

**100x impact:** Did you know that the best charities can have a 100x greater impact? Download our free Effective Giving Guide for the best tips on doing the most good this holiday season.

**6000 people:** Giving What We Can has helped 6,000+ people make a bigger impact on the causes they care about most. Download our free guide and learn how you can do the same. Cause list: Whether we're moved by animal welfare, the climate crisis, or worldwide humanitarian efforts, our community is united by one thing: making the biggest impact we can. Make a bigger difference in the world through charitable giving. Start by downloading our Effective Giving Guide. You'll learn how to approach charity research and smart giving. And be sure to share it with others who care about making a greater impact on the causes closest to their hearts.

**Learn:** Use our free guide to learn how to make a bigger impact on the causes you care about most.

**Only 3% research:** Only 3% of donors give based on charity effectiveness yet the best charities can be 100x more impactful. That's incredible! Check out the Effective Giving Guide 2021. It'll help you find the most impactful charities across a range of causes. Overwhelming: It can be overwhelming with so many problems in the world. Fortunately, we can do *a lot* to help, if we give effectively. Check out the Effective Giving Guide 2021. It'll help you find the most impactful charities across a range of causes.
:::

2.  **The Video ads theme and content**

::: {.callout-note collapse="true"}
## "Facts"

1.  [Charity research facts short video](https://drive.google.com/file/d/1EPgrkl7MpgcNUWBRUE9YPMG38gYClu2R/view?usp=sharing) (8 seconds): Only 3% of donors research charity effectiveness, yet the best charities can 100x your impact, learn how to give effectively 

2.  [Charity research facts long video](https://drive.google.com/file/d/1c58siggrMh2KN33bcj5f3afKgqY3RE5B/view?usp=sharing) (22 seconds): Trivial things we search (shows someone searching how to do Gangnam style), things we should research (shows someone searching how to donate effectively), only 3% of donors research charity effectiveness, yet the best charities can 100x your impact, learn how to give effectively. Slower paced music compared to the short video and cause videos.  
:::

::: {.callout-note collapse="true"}
## "Cause focus"

3.  [Climate change](https://drive.google.com/file/d/1FtI8gA7V0Jj16Ha91jp6XeF2skNXOu7w/view?usp=sharing) (15 seconds): Care about climate change? You don't have to renounce all your possessions, But you could give to effective environmental charities, Learn how to maximize your charitable impact, Download the Effective Giving Guide 

4.  [Animal welfare](https://drive.google.com/file/d/1qct5OPwrD3wJxZn7GEb9URTFMlkVN8ge/view?usp=sharing) (16 seconds): Care about animals? You don't have to adopt 100 cats, But you could give to effective animal charities, Learn how to maximize your charitable impact, Download the Effective Giving Guide 

5.  [Poverty](https://drive.google.com/file/d/1POx8U1Y8Ce8xpiaJU2f0s2X3a45t89zI/view?usp=sharing) (16 seconds): Want to help reduce global poverty? You don't have to build a village, But you could give to effective global development charities, Learn how to maximize your charitable impact, Download the Effective Giving Guide 
:::


::: {.callout-note collapse="true"}

## Arguments, rich content from "Hypercube"

6. [Hypercube](https://www.youtube.com/watch?v=CiFoHm7HD94) (1 min 22 seconds): Animated and voiceover video that explains how GWWC can help maximize charitable impact (support, community, and information) and the problems GWWC addresses (good intentions don't always produce the desired outcomes, there are millions of charities that have varying degrees of impact and some can even cause harm). CTA: Check out givingwhatwecan.org to learn how you can become an effective giver.

:::
    

::: {.callout-note collapse="true"}

## Notes from the trial description

"In the original version of our test, we had 1 video for the factual appeal and 3 videos for the cause led approach - 1 for global health and development, 1 for animal welfare and 1 for climate change."

"We targeted our ads to audiences we thought were likely to engage based on their interests and demographics, and targeted the cause led videos to a relevant audience, i.e. climate change message to climate change audience."

"We also had various text above the videos that were displayed and optimised."
:::



```{r, include=FALSE}
library(here)
source(here("code", "shared_packages_code.R"))
```

Details in Gitbook [HERE](https://effective-giving-marketing.gitbook.io/untitled/partner-organizations-and-trials/gwwc/giving-guides-+) and Gdoc [here](https://docs.google.com/document/d/1FfrXhD1YAIjrATy9PR6ScP20NMQa82sd80YvMb62iUQ/edit)

```{r wppage}

knitr::include_url("https://effective-giving-marketing.gitbook.io/untitled/partner-organizations-and-trials/gwwc/giving-guides-+")

```

## Build: Source data input and cleaning code

::: {.callout-note collapse="true"}
## **Update:** The discussion below does not pertain to the actual raw data.

The actual original/raw data is collapsed (breakdowns) by demography and ad set, into 2 files:

`video breakdown.csv`

`text breakdown.csv`

That data is clearly not identifying individuals; it involves aggregates based on real or assumed characteristics ... and, as the other data is derived from it, there is clearly nothing that needs to be hidden there

We input the 'actual raw data' (the statistics in a minimal format) below.
:::

```{r real_raw}

raw_data_path <- list("gwwc", "gg_raw_data_shareable")

raw_gwwc_gg_vid <-  read.csv(here(raw_data_path, "video breakdown.csv")) %>% as_tibble()

raw_gwwc_gg_text <-  read.csv(here(raw_data_path, "text breakdown.csv")) %>% as_tibble()
```

```{r}
#raw_gwwc_gg_vid %>% group_by(Campaign.name) %>% summarise(impressions = sum(Impressions))
```

::: {.callout-note collapse="true"}
## Access to data

Note: You must have access to the GWWC raw data to run this. This includes data that was constructed (with what code?) by expanding Facebook's aggregate reporting.

The files:

textdata_dv_linkclicks.csv videodata_dv_results.csv textdata_dv_results.csv videodata_dv_linkclicks.csv

are gitignored because of size
:::

```{r input_build_gwwc_gg_data}

source(here("gwwc", "giving_guides", "input_build_gwwc_gg_data_results.R"))

#source(here("gwwc", "giving_guides", "input_build_gwwc_gg_data_clicks.R"))

```

The code above inputs and builds 2-4 related data frames (tibbles), which were constructed from the collapsed (aggregated) data by multiplying rows according to observation counts.[^gwwc_gg-1]

[^gwwc_gg-1]: I am not sure where this was done.

`gwwc_text_clicks`: Observations of link clicks ...  by texts above video
gwwc_vid_clicks`: ... by video content[^gwwc_gg-2]

[^gwwc_gg-2]: I ignore the 'click data' results for now because I don't think it is particularly meaningful.

`gwwc_text_results`: Observations of emails provided ... by texts above video `gwwc_vid_results`: ... by video content

## Asking and answering questions

::: {.callout-note collapse="true"}
## This dynamic document format allows us to ask and answer a series of questions

- Using the data, with all coding steps shown
- Ideally, following a pre-defined (pre-analysis) plan
- Using the data and statistics directly and automatically in the narrative
     - And everything will be automatically adjusted if we bring in new data or adjust/correct features
:::


### In this context, how much does it cost to get a 'Result", i.e., to get a person to give their email to recieve a Giving Guide? {-}

^[Followup of interest: What do the 'diminishing returns to scale' look like here?] 


### Which pre-defined audience yields a Result at the lowest cost? How does this cost vary by audience? {-}

### Which pre-defined audience yields the highest 'rate of Result'? How does this vary by audience? {-}

Note, this is not the same as the previous question because some audiences are more *costly* to target on Facebook.

### Which *video* yields a Result at the highest rate/lowest cost?  {-}
^[Check: is this the same as 'which yields the highest rate of results, or is there a cost difference?']


**Sub-questions**
 
#### How does the 'best video' vary by audience? {-}

#### Aggregating: Which *category* of videos yields a result at the highest rate/lowest cost?  ("Facts", "Cause focus", or "Arguments, rich content") {-}


### Which *message* yields a Result at the highest rate/lowest cost?  {-}
^[Check: is this the same as 'which yields the highest rate of results, or is there a cost difference?']

**Sub-questions**
 
#### How does the 'best message' vary by audience? {-}


::: {.callout-note collapse="true"}
## Other questions (less interest or less feasible)

- Do the message treatments 'interact' with the video treatments (i.e., are their synergies and better pairings)?

- Do some videos lead to higher click rates? 

- Do some videos lead to higher watch rates? 


::: 


### Defining the 'outcomes of interest' (as objects)

```{r targets, echo=FALSE, warning=FALSE}

#targets:
#bin_out <- c("d_don_1k", "d_don_10pct")

#num_out <- c('donation_c', 'don_av2_yr', 'l_don_c', "l_don_av_2yr", "don_share_inc_imp_bc5k", "donation_plan_c")
#targets <- c(bin_out, num_out)
#targets_short <- c("don_av2_yr", "don_share_inc_imp_bc5k", "d_don_1k")

#Note -- don_av2_yr is the right one for qpoisson as it already expresses things in exponents. l_don_av2_yr was the one to use in the loglinear model, which we are not emphasizing

#targets_short_names <- c("Log (Avg don +1)", "Don/Income", "Donated 1k+")
```

Next, we define  the 'features of interest' and the 'controls'

```{r}

#features and controls
#geog <- c("where_live_cat", "city_cat")
#key_demog <- c("ln_age", "not_male_cat", "student_cat", "race_cat", geog)
#key_demog_n <- c("age_d2sd", "not_male_cat", "student_cat", "race_cat", geog)

```

## Analysis and visuals

[^gwwc_gg-3]

[^gwwc_gg-3]: Moved from Erin's work

```{r}

##gwwc_vid_results$DV_costadj)
##gwwc_vid_results$DV)
##gwwc_vid_results$ave.cost.impr)

```

Data summary

::: {.alert .alert-secondary}
Below, a few data summary bits (from Erin). I commented most of it out and will redo it using an automated and formatted 'key summary statistics' package.

I may also present the data in a dashboard for self-service.
:::

```{r}

gwwc_vid_results %>% group_by(Age) %>% summarise(n=n()) %>% .kable() %>%  .kable_styling()
gwwc_vid_results %>% group_by(Gender) %>% summarise(n=n())  %>% .kable() %>%  .kable_styling()

#print(gwwc_vid_results %>% group_by(Gender,Age) %>% summarise(n=n(),cost=mean(ave.cost.impr)),n=40)
#print(gwwc_vid_results %>% group_by(Ad.Set.Name) %>% summarise(n=n(),cost=mean(ave.cost.impr)),n=41)
#print(gwwc_vid_results %>% group_by(Campaign.name,Ad.Set.Name) %>% summarise(n=n(),cost=mean(ave.cost.impr)),n=100)

gwwc_vid_results %>% group_by(audience) %>% summarise(n=n(), cost=mean(ave.cost.impr)*100) %>% .kable(digits=2, caption="Average cost per impression (in pennies)") %>%  .kable_styling()

gwwc_vid_results %>% group_by(message) %>% summarise(n=n(),cost=mean(ave.cost.impr)*100) %>% .kable(digits=2, caption="Average cost per impression (in pennies)") %>%  .kable_styling()

```

```{r}

### CHART DATA

#print(gwwc_vid_results %>% group_by(audience,media) %>% #summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n=50)

```

## PLOTS

```{r common_plot_options}

#Plot options in common

limits <- aes(ymax = mean_dv + (se_dv), ymin = mean_dv - (se_dv))
dodge <- position_dodge(width = 0.9)

vid_types <-
  c("factual short",
    "animal",
    "climate",
    "factual long",
    "hypercube",
    "poverty")

gg_gg_options <- list(geom_bar(stat = 'identity', position=dodge),
  geom_errorbar(limits, position=dodge,  width=0.05),
  jtools::theme_apa(),
  theme(legend.position="none"),
  geom_text(aes(label = paste("$",mean_dv %>% round(.,2)), y=5), position = position_dodge(.9), size=4, color="white"),
  theme(text=element_text(size=10))
)

grpsumgg <- function(df, gvar, var) {
  df %>%
  group_by({{gvar}}) %>%
  summarise(mean_dv = mean({{var}}, na.rm=TRUE),
            se_dv = sd({{var}}, na.rm=TRUE)/sqrt(n()))
}

```

### PLOT: Cost adjusted DV (results) by video

```{r gwwc_vid_results_tab}

gwwc_vid_results %>%
    filter(ave.cost.impr > 0) %>%
    group_by(media) %>%
    summarise(
    `Results per $ (adjusted)` = mean(DV_costadj),
    SE = std.error(DV_costadj),
    n = n()
  ) %>%
  arrange(-`Results per $ (adjusted)`) %>%
  .kable(digits = 3) %>%
  .kable_styling()

```

```{r gwwc_vid_results_plot}

gwwc_vid_results %>%
  grpsumgg(media, DV_costadj) %>%
  ggplot(aes(x=media, y=mean_dv)) +
  gg_gg_options +
  geom_bar(stat='identity',fill="#0072B2", position=dodge) +
  ylab('Results/$ spent') +
  xlab('Video') +
  ggtitle('Results/$ spent by Video') +
  scale_y_continuous(limits = c(0,.2),  breaks=seq(0,.2, by=.05)) +
  scale_x_discrete(labels=vid_types)

```

### PLOT: DV (Results) by video

```{r}
gwwc_vid_results %>% filter(ave.cost.impr > 0) %>%
  group_by(media) %>%
  summarise(
  results = 100 * mean(DV),
  SE = 100 * std.error(DV),
  n = n()
) %>%
  .kable(digits = 2) %>%
  .kable_styling()

gwwc_vid_results %>%
   grpsumgg(media, DV) %>%
  ggplot(aes(x=media, y=mean_dv)) +
  geom_bar(stat='identity', fill="#0072B2",position=dodge) +
  ylab('Results (%)')+
  xlab('Video')+
  ggtitle('Results by Video')+
  scale_x_discrete(labels=vid_types)



```

### PLOT: Cost adjusted DV (results) by video and audience

Questions/Notes: Removed the retargeting audience

```{r}

#print(gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !="retargeting") %>% group_by(media,audience) %>% #summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50) %>% .kable(digits=2)


gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !="retargeting") %>%
  group_by(media, audience) %>%
  summarise(mean_dv = mean(DV_costadj, na.rm=TRUE),
            se_dv = sd(DV_costadj, na.rm=TRUE)/sqrt(n())) %>%
  ggplot(aes(x=audience, y=mean_dv, group=media, fill=media)) +
  gg_gg_options +
  labs(fill="Video")+
  scale_fill_brewer(palette="RdBu")+
  ylab('Results/$ spent')+
  xlab('Audience')+
  ggtitle('Results/$ spent by Video and Audience')+
  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+
  scale_y_continuous(limits = c(0,.25), oob = rescale_none, breaks=seq(0,.75, by=.25)) +
  scale_x_discrete(labels=c("philanthropy","animal","climate","general","lookalike","poverty","retargeting"))

#levels(gwwc_vid_results$audience)


```

### PLOT: DV (results) by video and audience

Questions/Notes: Removed the retargeting audience

```{r}


gwwc_vid_results %>% filter(ave.cost.impr > 0 &
    audience != "retargeting") %>% group_by(media, audience) %>% summarise(
      results = 100 * mean(DV),
      SE = 100 * std.error(DV),
      n = n()
    ) %>% .kable(digits = 2) %>% .kable_styling()


gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !="retargeting") %>%
  group_by(media, audience) %>%
  summarise(mean_dv = 100*mean(DV, na.rm=TRUE),
            se_dv = 100*sd(DV, na.rm=TRUE)/sqrt(n())) %>%
  ggplot(aes(x=audience, y=mean_dv, group=media, fill=media)) +
  gg_gg_options +
  labs(fill="Video")+
  scale_fill_brewer(palette="RdBu")+
  ylab('Results (%)')+
  xlab('Audience')+
  ggtitle('Results by Video and Audience')+
  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+
  scale_y_continuous(limits = c(0,1.1),  oob = rescale_none,  breaks=seq(0,1.1, by=.1)) +
  scale_x_discrete(labels=c("philanthropy","animal","climate","general","lookalike","poverty","retargeting"))




```

### PLOT: Cost adjusted DV (results) by audience

```{r}
#pirint(gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !="retargeting") %>% group_by(audience) %>% summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50)

```

```{r}

gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !="retargeting") %>%
  group_by(audience) %>%
summarise(mean_dv = mean(DV_costadj, na.rm=TRUE),
            se_dv = sd(DV_costadj, na.rm=TRUE)/sqrt(n())) %>%
  ggplot(aes(x=audience, y=mean_dv)) +
  gg_gg_options +
  ylab('Results/$ spent')+
  xlab('Audience')+
  ggtitle('Results/$ spent by Audience')+
  scale_y_continuous(limits = c(0,.2),  breaks=seq(0,.2, by=.05)) +
  scale_x_discrete(labels=c("philanthropy","animal"   ,"climate","general","lookalike","poverty"))


```

### PLOT: DV (Results) by audience

```{r}
#print(gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !="retargeting") %>% group_by(audience) %>% summarise(results=100*mean(DV),SE=100*std.error(DV),n=n()),n=50)


gwwc_vid_results %>% filter(ave.cost.impr>0 & audience !="retargeting") %>%
  group_by(audience) %>%
  summarise(mean_dv = 100*mean(DV, na.rm=TRUE),
            se_dv = 100*sd(DV, na.rm=TRUE)/sqrt(n())) %>%
  ggplot(aes(x=audience, y=mean_dv)) +
  gg_gg_options +
  ylab('Results (%)')+
  xlab('Audience')+
  ggtitle('Results by Audience')+
  scale_y_continuous(limits = c(0,.4),  breaks=seq(0,.4, by=.05)) +
  scale_x_discrete(labels=c("philanthropy","animal"   ,"climate","general","lookalike","poverty"))

```

### PLOT: Cost adjusted DV (results) by age and gender

Did not filter out the retargeting audience like i did for the other charts

```{r}
gwwc_vid_results$Gender <- as.factor(gwwc_vid_results$Gender)
#levels(gwwc_vid_results$Gender)

class(gwwc_vid_results$Age)
gwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref="18-24")
gwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref="13-17")
#levels(gwwc_vid_results$Age)

#print(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(Age,Gender) %>% summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50)


gwwc_vid_results %>% filter(ave.cost.impr>0 & Age!="13-17") %>%
  group_by(Age, Gender) %>%
  summarise(mean_dv = mean(DV_costadj, na.rm=TRUE),
            se_dv = sd(DV_costadj, na.rm=TRUE)/sqrt(n())) %>%
  ggplot(aes(x=Age, y=mean_dv, group=Gender, fill=Gender)) +
  gg_gg_options +
  labs(fill="Gender")+
  scale_fill_brewer(palette="Paired")+
  ylab('Results/$ spent')+
  xlab('Age')+
  ggtitle('Results/$ spent by Age and Gender')+
  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+
  scale_y_continuous(limits = c(0,.35),  breaks=seq(0,.35, by=.1)) +
  scale_x_discrete(labels=c("18-24","25-34","35-44","45-54","55-64","65+" ))

```

### PLOT: DV (results) by age and gender

```{r}
gwwc_vid_results$Gender <- as.factor(gwwc_vid_results$Gender)
#levels(gwwc_vid_results$Gender)

#class(gwwc_vid_results$Age)
gwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref="18-24")
gwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref="13-17")
#levels(gwwc_vid_results$Age)

#print(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(Age,Gender) %>% summarise(results=100*mean(DV),SE=std.error(100*DV),n=n()),n=50)

gwwc_vid_results %>% filter(ave.cost.impr>0 & Age!="13-17") %>%
  group_by(Age, Gender) %>%
  summarise(mean_dv = 100*mean(DV, na.rm=TRUE),
            se_dv = 100*sd(DV, na.rm=TRUE)/sqrt(n())) %>%
  ggplot(aes(x=Age, y=mean_dv, group=Gender, fill=Gender)) +
  gg_gg_options +
  labs(fill="Gender")+
  scale_fill_brewer(palette="Paired")+
  ylab('Results (%)')+
  xlab('Age')+
  ggtitle('Results by Age and Gender')+
  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+
  scale_y_continuous(limits = c(0,.75),  breaks=seq(0,.75, by=.25)) +
  scale_x_discrete(labels=c("18-24","25-34","35-44","45-54","55-64","65+" ))

```

### PLOT: Cost adjusted DV (results) by Video and Age

```{r}
class(gwwc_vid_results$Age)
gwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref="18-24")
gwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref="13-17")
levels(gwwc_vid_results$Age)

#print(gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(Age,media) %>% summarise(results=mean(DV_costadj),SE=std.error(DV_costadj),n=n()),n=50)


gwwc_vid_results %>% filter(ave.cost.impr>0 & Age!="13-17") %>%
  group_by(media, Age) %>%
  summarise(mean_dv = mean(DV_costadj, na.rm=TRUE),
            se_dv = sd(DV_costadj, na.rm=TRUE)/sqrt(n())) %>%
  ggplot(aes(x=Age, y=mean_dv, group=media, fill=media)) +
  gg_gg_options +
  labs(fill="Video")+
  scale_fill_brewer(palette="RdBu")+
  ylab('Results/$ spent')+
  xlab('Age')+
  ggtitle('Results/$ spent by Video and Age')+
  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+
  scale_y_continuous(limits = c(0,.2),  breaks=seq(0,.2, by=.05)) +
  scale_x_discrete(labels=c("18-24","25-34","35-44","45-54","55-64","65+"))


```

### PLOT: DV (results) by video and age

```{r}
class(gwwc_vid_results$Age)
gwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref="18-24")
gwwc_vid_results$Age <- relevel(gwwc_vid_results$Age, ref="13-17")
#levels(gwwc_vid_results$Age)

gwwc_vid_results %>% filter(ave.cost.impr>0) %>% group_by(Age,media) %>% summarise(results=100*mean(DV),SE=100*std.error(DV),n=n()) %>%
  .kable(digits=2) %>%  .kable_styling()

```

```{r}



gwwc_vid_results %>% filter(ave.cost.impr>0 & Age !="13-17") %>%
    group_by(media, Age) %>%
  summarise(mean_dv = 100*mean(DV, na.rm=TRUE),
            se_dv = 100*sd(DV, na.rm=TRUE)/sqrt(n())) %>%
  ggplot(aes(x=Age, y=mean_dv, group=media, fill=media)) +
  gg_gg_options +
  labs(fill="Video")+
  scale_fill_brewer(palette="RdBu")+
  ylab('Results (%)')+
  xlab('Age')+
  ggtitle('Results by Video and Age')+
  theme_apa(legend.font.size = 8,legend.use.title = TRUE)+
  scale_y_continuous(limits = c(0,.85),  breaks=seq(0,.85, by=.25)) +
  scale_x_discrete(labels=c("18-24","25-34","35-44","45-54","55-64","65+"))


```

## Statistics and models -- needs to be made into tables

### Regressions with interactions

```{r}
#lm(data = gwwc_vid_results, DV~Gender*Age+ave.cost.impr)
#lm(data = gwwc_vid_results,DV~Gender*Age))

```

### Regressions with no interactions

just demographics, not control

```{r}
#data = lm(gwwc_vid_results,DV~Gender+Age)
```

just demographic, controlling for cost

```{r}
#lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr)

```

means and standard errors for age groups/gender

```{r}
gwwc_vid_results %>% group_by(Gender,Age) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results) %>%
  .kable() %>% .kable_styling()
```

```{r}

hist(gwwc_vid_results$DV_costadj[gwwc_vid_results$DV_costadj>0])
hist(gwwc_vid_results$DV_costadj[gwwc_vid_results$DV_costadj>=0])
```

### DEMOGRAPHICS WITH CONTROLS FOR VIDEO AND COST

```{r}


#lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr)
#lm(gwwc_vid_results, DV_costadj~Gender+Age)
```

#### AUDIENCES

main effects

```{r}
#lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr+audience)
```

NEW DV

```{r}
#lm(gwwc_vid_results,DV_costadj~Gender+Age+audience)

  #interactions
  #lm(gwwc_vid_results,DV~Gender*audience+ave.cost.impr+Age)

## NEW DV
    #lm(gwwc_vid_results,DV_costadj~Gender*audience+Age)
  #lm(gwwc_vid_results,DV~Age*audience+ave.cost.impr+Gender)

  #means for audience
gwwc_vid_results %>%
  group_by(audience) %>%
  summarise(
    results=mean(DV)*100,
    SE=std.error(DV)*100,
    n=n(),
    cost=mean(ave.cost.impr),
    CPR=cost/results) %>%
    .kable %>%
      .kable_styling()

```

#### MESSAGES ####

no controls

```{r}
#lm(gwwc_vid_results,DV~message
  #control for cost only
  #lm(gwwc_vid_results,DV~message+ave.cost.impr)
  #check results with campaign
  #lm(gwwc_vid_results,DV~Campaign.name)
  #check results with campaign and cost control
  #lm(gwwc_vid_results,DV~Campaign.name+ave.cost.impr)
```

with controls

```{r}
#lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr+audience+message)

#interactions
#with audience
#lm(gwwc_vid_results,DV~message*audience+ave.cost.impr+Age+Gender)
#with Gender
#lm(gwwc_vid_results,DV~message*Gender+ave.cost.impr+Age+audience)
#with Age (emotional much worse with ages 65+)
#lm(gwwc_vid_results,DV~message*Age+ave.cost.impr+Age+audience)

```

interaction with age and campaign restriction

```{r}

#lm(gwwc_vid_results,DV~message*agetrin+message*restriction18_39+ave.cost.impr+Age+Gender)
#lm(gwwc_vid_results,DV~message*agetrin+message*restriction18_39+ave.cost.impr)


```

in just early campaigns

```{r}
#lm(subset(data,restriction18_39==0),DV~message*agetrin+ave.cost.impr)


```

### MEDIA

no controls

```{r}
#lm(gwwc_vid_results,DV~media)

```

means and SEs

```{r}
gwwc_vid_results %>% group_by(media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results)

```

control for cost only

```{r}
#lm(gwwc_vid_results,DV~media+ave.cost.impr)
```

## NEW DV

```{r}
#lm(gwwc_vid_results,DV_costadj~media))####THIS IS GOOD

```

with controls

```{r}
#lm(gwwc_vid_results,DV~Gender+Age+ave.cost.impr+audience+media)
```

### NEW DV

```{r}
#lm(gwwc_vid_results,DV_costadj~Gender+Age+audience+media)

```

interactions

```{r}
#lm(gwwc_vid_results,DV~media*Age+media*Gender+media*audience+ave.cost.impr)
#lm(gwwc_vid_results,DV_costadj~media*Age+media*Gender+media*audience)
#lm(gwwc_vid_results,DV~media*Age+media*Gender+media*audience)
#lm(gwwc_vid_results,DV_costadj~Age+Gender+media*audience)

```

with audience

```{r}
#lm(gwwc_vid_results,DV~media*audience+ave.cost.impr+Age+Gender)
```

means and SEs

```{r}

gwwc_vid_results %>% group_by(audience,media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results) %>%
.kable() %>% .kable_styling()

```

with Gender

```{r}
#lm(gwwc_vid_results,DV~media*Gender+ave.cost.impr+Age+audience)
```

means and SEs

```{r, eval=FALSE}

gwwc_vid_results %>% group_by(Gender, media) %>% summarise(
  results = mean(DV) * 100,
  SE = std.error(DV) * 100,
  n = n(),
  cost = mean(ave.cost.impr),
  CPR = cost / results
)

```


<!-- 
with Age (emotional much worse with ages 65+)

#lm(gwwc_vid_results,DV~media*Age+ave.cost.impr+Age+audience)


means and SEs
print(gwwc_vid_results %>% group_by(Age,media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n = 50)
print(gwwc_vid_results %>% group_by(audience,Age,media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n = 500)
--> 


interaction with age and campaign restriction - old people really hated factual long

```{r}
#lm(gwwc_vid_results,DV~media*agetrin+media*restriction18_39+ave.cost.impr+Age+Gender))
#lm(gwwc_vid_results,DV~media*agetrin+media*restriction18_39+ave.cost.impr))
```

in just early campaigns

```{r}
#subset(gwwc_vid_results,restriction18_39==0),DV~media*agetrin+ave.cost.impr))
```

means and SEs

```{r, eval=FALSE}

gwwc_vid_results %>% filter(restriction18_39 == 0) %>% group_by(Age, media) %>% summarise(
  results = mean(DV) * 100,
  SE = std.error(DV) * 100,
  n = n(),
  cost = mean(ave.cost.impr),
  CPR = cost / results
)


```


# DEMOGRPAHICS AND COST ONLY ####
regressions with interactions

```{r}
#lm(gwwc_vid_results,DV_costadj~Gender*Age)) #no significant effects

```

regressions with no interactions
just demographic, not control

```{r}
#lm(gwwc_vid_results,DV_costadj~Gender+Age))

```

means and standard errors for age groups/gender

```{r}
print(gwwc_vid_results %>% group_by(Gender,Age) %>% summarise(results=mean(DV_costadj)*100,SE=std.error(DV_costadj)*100,n=n()),n=50) ##idk if the changes i made to this line make sense


```

#### DEMOGRAPHICS WITH CONTROLS FOR VIDEO ####


```{r}
#gwwc_vid_results %>% lm(data = ., DV_costadj~Gender+Age+Video))

```

#### AUDIENCES ####

main effects

```{r}
#lm(gwwc_vid_results,DV_costadj~Gender+Age+audience))

```

interactions

```{r}
#lm(gwwc_vid_results,DV_costadj~Gender*audience+Age))
#lm(gwwc_vid_results,DV_costadj~Age*audience+Gender))

```

means for audience

```{r, eval=FALSE}

gwwc_vid_results %>% group_by(audience) %>% 
  summarise(
  results = mean(DV_costadj) * 100,
  SE = std.error(DV_costadj) * 100,
  n = n()
)

#Why all NaN?


```

#### MESSAGES ####

no controls

```{r}
#lm(gwwc_vid_results,DV_costadj~message))
#lm(gwwc_vid_results,DV~message+ave.cost.impr))
```

check results with campaign

```{r}
#lm(gwwc_vid_results,DV_costadj~Campaign.name))
```

with controls

```{r}
#lm(gwwc_vid_results,DV_costadj~Gender+Age+audience+message))

```

interactions with audience

```{r}
#lm(gwwc_vid_results,DV_costadj~message*audience+Age+Gender))
```

with Gender

```{r}
#lm(gwwc_vid_results,DV_costadj~message*Gender+Age+audience))
```

with Age (emotional much worse with ages 65+)

```{r}
#lm(gwwc_vid_results,DV_costadj~message*Age+Age+audience))

```

interaction with age and campaign restriction

```{r}
#lm(gwwc_vid_results,DV_costadj~message*agetrin+message*restriction18_39+Age+Gender))
#lm(gwwc_vid_results,DV_costadj~message*agetrin+message*restriction18_39))
```

in just early campaigns

```{r}
#lm(subset(gwwc_vid_results,restriction18_39==0),DV_costadj~message*agetrin))

```

#### MEDIA ####
no controls

```{r}
#lm(gwwc_vid_results,DV_costadj~media))

```

means and SEs

```{r}

gwwc_vid_results %>% 
  filter(ave.cost.impr > 0) %>% group_by(media) %>% summarise(
  mean(DV_costadj),
  results = mean(DV) * 100,
  SE = std.error(DV) * 100,
  n = n(),
  cost = mean(ave.cost.impr),
  CPR = cost / results,
  RPC = results / cost
) ##idk how to do this line?

```

with controls

```{r}
#lm(gwwc_vid_results,DV_costadj~Gender+Age+audience+media))

```

interactions

```{r}
#lm(gwwc_vid_results,DV_costadj~media*Age+media*Gender+media*audience))

```

with audience

```{r}
#lm(gwwc_vid_results,DV_costadj~media*audience+Age+Gender))

```

means and SEs

```{r, eval=FALSE}

gwwc_vid_results %>% group_by(audience, media) %>% summarise(
  results = mean(DV) * 100,
  SE = std.error(DV) * 100,
  n = n(),
  cost = mean(ave.cost.impr),
  CPR = cost / results
) ###skipped updating

```

with Gender

```{r}
#lm(gwwc_vid_results,DV_costadj~media*Gender+Age+audience))
```

means and SEs

```{r, eval=FALSE}

data %>% group_by(Gender,media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results) #####skipped updating


```

with Age (emotional much worse     with ages 65+)

don't see the effect of emotional being much worse with ages 65+

```{r}
#lm(gwwc_vid_results,DV_costadj~media*Age+Age+audience))


#means and SEs

#print(data %>% group_by(Age,media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n = 50) ###idk how to update this
#print(data %>% group_by(audience,Age,media) %>% summarise(results=mean(DV)*100,SE=std.error(DV)*100,n=n(),cost=mean(ave.cost.impr),CPR=cost/results),n = 500) ###idk how to update this
```

interaction with age and campaign restriction - old people really hated factual long

```{r}
#lm(gwwc_vid_results,DV_costadj~media*agetrin+media*restriction18_39+Age+Gender))
#lm(gwwc_vid_results,DV_costadj~media*agetrin+media*restriction18_39))
```

in just early campaigns

```{r}
#lm(gwwc_vid_results=subset(gwwc_vid_results,restriction18_39==0),DV_costadj~media*agetrin))
```

means and SEs

```{r, eval=FALSE}

gwwc_vid_results %>% filter(restriction18_39 == 0) %>% group_by(Age, media) %>% summarise(
  results = mean(DV) * 100,
  SE = std.error(DV) * 100,
  n = n(),
  cost = mean(ave.cost.impr),
  CPR = cost / results
)



```


